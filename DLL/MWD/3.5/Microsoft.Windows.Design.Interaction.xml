<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Windows.Design.Interaction</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerColors">
      <summary>
                    Provides a set of common brushes that can be used on adorners.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.AlignmentMarkBrush">
      <summary>
                    Gets the brush used for the alignment marks.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Brush" /> representing the standard brush for alignment marks in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.AlignmentMarkBrushKey">
      <summary>
                    Gets a resource key for the color of alignment marks.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard brush for alignment marks in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.AlignmentMarkColor">
      <summary>
                    Gets the color that is used for the alignment marks.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Color" /> representing the standard color for alignment marks in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.AlignmentMarkColorKey">
      <summary>
                    Gets a resource key for the color of alignment marks.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard color for alignment marks in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.ElementBorderBrush">
      <summary>
                    Gets the brush used for the borders of elements.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Brush" /> representing the standard brush for elements in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.ElementBorderBrushKey">
      <summary>
                    Gets a resource key for the brush of borders of elements.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard brush for elements in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.ElementBorderColor">
      <summary>
                    Gets the color that is used for the borders of elements.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Color" /> representing the standard color for elements in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.ElementBorderColorKey">
      <summary>
                    Gets a resource key for the color of borders of elements.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard color for elements in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.GlyphFillBrush">
      <summary>
                    Gets the brush used for the fill of any glyph.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Brush" /> representing the standard brush for glyphs in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.GlyphFillBrushKey">
      <summary>
                    Gets a resource key for the brush used to fill a glyph.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard brush for glyphs in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.GlyphFillColor">
      <summary>
                    Gets the color that is used for the fill of any glyph.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Color" /> representing the standard color for glyphs in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.GlyphFillColorKey">
      <summary>
                    Gets a resource key for the color that is used to fill a glyph.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard color for glyphs in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleBorderBrush">
      <summary>
                    Gets a brush to paint the border of a handle.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Brush" /> representing the standard brush for handle borders in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleBorderBrushKey">
      <summary>
                    Gets a resource key for the border brush of a handle.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard border brush for handles in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleBorderColor">
      <summary>
                    Gets the color of a handle border.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Color" /> representing the standard color for handle borders in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleBorderColorKey">
      <summary>
                    Gets a resource key for the color of a handle border.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard border color for handles in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleFillBrush">
      <summary>
                    Gets a brush to paint the fill of a handle.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Brush" /> representing the standard brush for handles in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleFillBrushKey">
      <summary>
                    Gets a resource key for the brush of a handle.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard brush for handles in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleFillColor">
      <summary>
                    Gets the color of a handle.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Color" /> representing the standard color for handles in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleFillColorKey">
      <summary>
                    Gets a resource key for the color of a handle.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard color for handles in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleFillHoverBrush">
      <summary>
                    Gets a brush to paint the fill of a handle when the mouse pointer is over it.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Brush" /> representing the standard brush for a handle when the mouse pointer is moved over it in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleFillHoverBrushKey">
      <summary>
                    Gets a resource key for the brush of a handle when the mouse pointer is over it.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard brush for a handle when the mouse pointer is moved over it in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleFillHoverColor">
      <summary>
                    Gets the color of a handle when the mouse pointer is over it.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Color" /> representing the standard color for a handle when the mouse pointer is moved over it in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleFillHoverColorKey">
      <summary>
                    Gets a resource key for the color of a handle when the mouse pointer is over it.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard color for a handle when the mouse pointer is moved over it in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleFillPressedBrush">
      <summary>
                    Gets a brush to paint the fill of a handle when it is pressed.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Brush" /> representing the standard brush for a pressed handle in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleFillPressedBrushKey">
      <summary>
                    Gets a resource key for the brush of a handle when it is pressed.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard brush for a pressed handle in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleFillPressedColor">
      <summary>
                    Gets the color of a handle when it is pressed.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Color" /> representing the standard color for a pressed handle in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.HandleFillPressedColorKey">
      <summary>
                    Gets a resource key for the color of a handle when it is pressed.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard color for a pressed handle in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.MoveHandleContentBrush">
      <summary>
                    Gets the brush used for the content of a move handle.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Brush" /> representing the standard brush for a move handle's content in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.MoveHandleContentBrushKey">
      <summary>
                    Gets a resource key for the brush used for the content of a move handle.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard brush for the content of a move handle in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.MoveHandleContentColor">
      <summary>
                    Gets the color that is used for the content of a move handle.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Color" /> representing the standard color for a move handle's content in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.MoveHandleContentColorKey">
      <summary>
                    Gets a resource key for the color that is used for the content of a move handle.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard color for the content of a move handle in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.MoveHandleFillBrush">
      <summary>
                    Gets the brush used for the fill of a move handle when the mouse pointer is not over it.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Brush" /> representing the standard brush for move handles in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.MoveHandleFillBrushKey">
      <summary>
                    Gets a resource key for the brush used for the fill of a move handle when the mouse pointer is not over it.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard brush for move handles in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.MoveHandleFillColor">
      <summary>
                    Gets the color that is used for the fill of a move handle when the mouse pointer is not over it.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Color" /> representing the standard color for move handles content in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.MoveHandleFillColorKey">
      <summary>
                    Gets a resource key for the color that is used for the fill of a move handle when the mouse pointer is not over it.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard color for move handles in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.MoveHandleFillHoverBrush">
      <summary>
                    Gets the brush used for the fill of a move handle when the mouse pointer is over it.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Brush" /> representing the standard brush for a move handle when the mouse pointer is moved over it in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.MoveHandleFillHoverBrushKey">
      <summary>
                    Gets a resource key for the brush used for the fill of a move handle when the mouse pointer is over it.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard brush for a move handle when the mouse pointer is moved over it in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.MoveHandleFillHoverColor">
      <summary>
                    Gets the color that is used for the fill of a move handle when the mouse pointer is over it.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Color" /> representing the standard color for a move handle when the mouse pointer is moved over it in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.MoveHandleFillHoverColorKey">
      <summary>
                    Gets a resource key for the color that is used for the fill of a move handle when the mouse pointer is over it.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard color for a move handle when the mouse pointer is moved over it in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.RailFillBrush">
      <summary>
                    Gets the fill brush for rails.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Brush" /> representing the standard brush for rails in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.RailFillBrushKey">
      <summary>
                    Gets a resource key for the brush used for rails.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard brush for rails in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.RailFillColor">
      <summary>
                    Gets the fill color for rails.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Color" /> representing the standard color for rails in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.RailFillColorKey">
      <summary>
                    Gets a resource key for the color that is used for rails.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard color for rails in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.SelectionFrameBorderBrush">
      <summary>
                    Gets the brush used for the selection frame around controls.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Brush" /> representing the standard brush for the selection frame in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.SelectionFrameBorderBrushKey">
      <summary>
                    Gets a resource key for the brush used for the selection frame around controls.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard brush for the selection frame in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.SelectionFrameBorderColor">
      <summary>
                    Gets the color that is used for the selection frame around controls.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Color" /> representing the standard color for the selection frame in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.SelectionFrameBorderColorKey">
      <summary>
                    Gets a resource key for the color that is used for the selection frame around controls.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard color for the selection frame in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.SelectionFrameFillBrush">
      <summary>
                    Gets the fill brush for the selection frame used on controls.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Brush" /> representing the standard fill brush for the selection frame in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.SelectionFrameFillBrushKey">
      <summary>
                    Gets a resource key for the brush used for the selection frame used on controls.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard fill brush for the selection frame in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.SelectionFrameFillColor">
      <summary>
                    Gets the fill color for the selection frame used on controls.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Color" /> representing the standard fill color for the selection frame in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.SelectionFrameFillColorKey">
      <summary>
                    Gets a resource key for the color that is used for the selection frame on controls.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard fill color for the selection frame in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.SimpleWashBrush">
      <summary>
                    Gets a simple wash brush.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Brush" /> representing the standard brush for a simple wash in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.SimpleWashBrushKey">
      <summary>
                    Gets a resource key for the brush used for simple washes.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard brush for a simple wash in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.SimpleWashColor">
      <summary>
                    Gets a simple wash color.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Color" /> representing the standard color for a simple wash in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.SimpleWashColorKey">
      <summary>
                    Gets a resource key for the color that is used for simple washes.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard color for a simple wash in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.ToggledGlyphFillBrush">
      <summary>
                    Gets the brush for a toggled glyph’s fill.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Brush" /> representing the standard brush for a toggled glyph in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.ToggledGlyphFillBrushKey">
      <summary>
                    Gets a resource key for the brush used for a toggled glyph's fill.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard brush for a toggled glyph in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.ToggledGlyphFillColor">
      <summary>
                    Gets the color for a toggled glyph’s fill.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Color" /> representing the standard color for a toggled glyph in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerColors.ToggledGlyphFillColorKey">
      <summary>
                    Gets a resource key for the color for a toggled glyph's fill.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard color for a toggled glyph in the WPF Designer.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerCoordinateSpace">
      <summary>
                    Defines a 2D coordinate space for use in <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" />.  
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerCoordinateSpaces">
      <summary>
                    Defines the two common coordinate spaces used in the designer. 
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerCoordinateSpaces.Layout">
      <summary>
                    Gets the layout coordinate space based on layout information provided by Windows Presentation Foundation (WPF).
                </summary>
      <returns>
                    An <see cref="T:Microsoft.Windows.Design.Interaction.AdornerCoordinateSpace" /> specifying layout space.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerCoordinateSpaces.Render">
      <summary>
                    Gets the render coordinate space based on render information from the raw Windows Presentation Foundation (WPF) visual tree.
                </summary>
      <returns>
                    An <see cref="T:Microsoft.Windows.Design.Interaction.AdornerCoordinateSpace" /> specifying render space.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerFonts">
      <summary>
                    Provides a set of common brushes that can be used on adorners.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerFonts.FontFamily">
      <summary>
                    Gets a <see cref="T:System.Windows.Media.FontFamily" /> for the current item.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.FontFamily" /> representing the standard font family in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerFonts.FontFamilyKey">
      <summary>
                    Gets a resource key for the <see cref="T:System.Windows.Media.FontFamily" /> for the adorner.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard font family in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerFonts.FontSize">
      <summary>
                    Gets the font size to paint the current <see cref="T:System.Windows.Media.FontFamily" />.
                </summary>
      <returns>
                    A double representing the standard font size in the WPF Designer.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerFonts.FontSizeKey">
      <summary>
                    Gets a resource key for the font size for the adorner.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.ResourceKey" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerResources" /> dictionary representing the standard font size in the WPF Designer.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerLayout">
      <summary>
                    Performs the layout of an adorner on the <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" />. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerLayout.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerLayout" /> class. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerLayout.AdornerPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
                    Invoked on the adorner layout whenever one of the properties stored in the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerProperties" /> class changes. 
                </summary>
      <param name="adorner">
                    The adorner whose property has changed.
                </param>
      <param name="args">
                    A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />  that contains details of the property change.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerLayout.Arrange(System.Windows.UIElement)">
      <summary>
                    Performs the layout arrangement on the specified adorner.
                </summary>
      <param name="adorner">
                    The adorner to be arranged.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerLayout.EvaluateLayout(Microsoft.Windows.Design.Interaction.DesignerView,System.Windows.UIElement)">
      <summary>
                    Gets a value indicating whether the adorner remains in the UI tree. 
                </summary>
      <returns>true if <paramref name="adorner" /> should remain in the UI tree. false if one or more visuals it is associated with are no longer part of the UI tree.
                </returns>
      <param name="view">
                    The designer view that is evaluating the layout.
                </param>
      <param name="adorner">
                    The adorner to be evaluated.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="view" /> or <paramref name="adorner" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerLayout.IsAssociated(System.Windows.UIElement,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>
                    Gets a value indicating whether the specified model item is associated with this adorner.  
                </summary>
      <returns>true if the adorner is associated with the specified model item.
                </returns>
      <param name="adorner">
                    The adorner to check.
                </param>
      <param name="item">
                    The item to compare.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> or <paramref name="item" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerLayout.Measure(System.Windows.UIElement,System.Windows.Size)">
      <summary>
                    Performs the layout measurement on the specified adorner. 
                </summary>
      <param name="adorner">
                    The adorner to be measured.
                </param>
      <param name="constraint">
                    The constrained size of the adorner.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerLayout.SetActualModel(System.Windows.DependencyObject,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>
                    Helper method that sets the ActualModel attached property of an adorner.  
                </summary>
      <param name="adorner">
                    The adorner to set the ActualModel for.
                </param>
      <param name="value">
                    The model to set.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerLayout.SetActualView(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>
                    Helper method that sets the ActualView property of an adorner.  
                </summary>
      <param name="adorner">
                    The adorner to set the ActualView for.
                </param>
      <param name="value">
                    The view to set.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> is null.
                </exception>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerOrder">
      <summary>
                    Specifies the z-order of adorners in Design view. 
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerOrder.Background">
      <summary>
                    Gets a value indicating that the adorner is placed after the content. 
                </summary>
      <returns>
                    An <see cref="T:Microsoft.Windows.Design.Interaction.AdornerOrder" /> specifying the bottom of the z-order.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerOrder.Content">
      <summary>
                    Gets a value indicating that the adorner is placed with other content adorners. This is the default.
                </summary>
      <returns>
                    An <see cref="T:Microsoft.Windows.Design.Interaction.AdornerOrder" /> specifying the z-order of the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" />.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerOrder.CreateAbove(Microsoft.Windows.Design.Interaction.AdornerOrder)">
      <summary>
                    Creates a new adorner order that places the adorner above the provided reference in the z-order.
                </summary>
      <returns>
                    A new <see cref="T:Microsoft.Windows.Design.Interaction.AdornerOrder" /> that places the adorner above adorners with the specified reference.
                </returns>
      <param name="reference">
                    The <see cref="T:Microsoft.Windows.Design.Interaction.AdornerOrder" /> to place the adorner above.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reference" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerOrder.CreateBelow(Microsoft.Windows.Design.Interaction.AdornerOrder)">
      <summary>
                    Creates a new adorner order that places the adorner below the provided reference in the z-order.
                </summary>
      <returns>
                    A new <see cref="T:Microsoft.Windows.Design.Interaction.AdornerOrder" /> that places the adorner below adorners with the specified reference.
                </returns>
      <param name="reference">
                    The <see cref="T:Microsoft.Windows.Design.Interaction.AdornerOrder" /> to place the adorner below.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reference" /> is null.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerOrder.Foreground">
      <summary>
                    Gets a value indicating that the adorner is placed before content adorners.
                </summary>
      <returns>
                    An <see cref="T:Microsoft.Windows.Design.Interaction.AdornerOrder" /> specifying the top of the z-order.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerPanel">
      <summary>
                    Provides a container for Windows Presentation foundation (WPF) controls, which are used at design time as adorners. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" /> class.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerPanel.ActualView">
      <summary>
                    Gets or sets the computed view associated with the adorner panel.
                </summary>
      <returns>
                    The value of the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.View" /> property, if <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.View" /> is set; otherwise, the view obtained from the model.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.ArrangeOverride(System.Windows.Size)">
      <returns>
                    A Size object that represents the arranged size.
                </returns>
      <param name="finalSize">
                    The final size allowed for the arrange.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerPanel.CoordinateSpace">
      <summary>
                    Gets or sets the space to use for rendering the adorner panel. This is a dependency property.
                </summary>
      <returns>
                    An <see cref="T:Microsoft.Windows.Design.Interaction.AdornerCoordinateSpaces" /> value representing the adorner panel's coordinate space. The default is <see cref="P:Microsoft.Windows.Design.Interaction.AdornerCoordinateSpaces.Render" />.
                </returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPanel.CoordinateSpaceProperty">
      <summary>
                    Identifies the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.CoordinateSpace" /> dependency property.
                </summary>
      <returns>
                    The identifier for the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.CoordinateSpace" /> dependency property.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.FromVisual(System.Windows.DependencyObject)">
      <summary>
                    Returns the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" /> that is the parent of the specified <see cref="T:System.Windows.Media.Visual" />.
                </summary>
      <returns>
                    An <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" /> that is the parent of the visual, or null if the visual does not have a parent view.
                </returns>
      <param name="visual">
                    A <see cref="T:System.Windows.Media.Visual" /> or <see cref="T:System.Windows.Media.Media3D.Visual3D" /> that is a child of the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" />.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visual" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.GetHorizontalStretch(System.Windows.UIElement)">
      <summary>
                    Gets the value of the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.HorizontalStretch" /> attached property for the specified <see cref="T:System.Windows.DependencyObject" />. 
                </summary>
      <returns>
                    An <see cref="T:Microsoft.Windows.Design.Interaction.AdornerStretch" /> for the adorner panel along the x-axis. The default value is <see cref="F:Microsoft.Windows.Design.Interaction.AdornerStretch.None" />. 
                </returns>
      <param name="adorner">
                    The <see cref="T:System.Windows.UIElement" /> from which to read the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.HorizontalStretch" /> attached property.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.GetPlacements(System.Windows.UIElement)">
      <summary>
                    Gets the value of the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.Placements" /> attached property for the specified <see cref="T:System.Windows.DependencyObject" />. 
                </summary>
      <returns>
                    An <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection" /> which holds <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementValue" /> objects representing <paramref name="adorner" />'s size and position. 
                </returns>
      <param name="adorner">
                    The <see cref="T:System.Windows.UIElement" /> to get placements for.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.GetTask(System.Windows.UIElement)">
      <summary>
                    Reads the Task property from the specified element. 
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Interaction.Task" /> that represents the task associated with <paramref name="adorner" />.
                </returns>
      <param name="adorner">
                    The <see cref="T:System.Windows.UIElement" /> from which to read the <see cref="P:Microsoft.Windows.Design.Interaction.FocusedTask.Task" /> attached property.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.GetVerticalStretch(System.Windows.UIElement)">
      <summary>
                    Gets the value of the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.VerticalStretch" /> attached property for the specified <see cref="T:System.Windows.DependencyObject" />. 
                </summary>
      <returns>
                    An <see cref="T:Microsoft.Windows.Design.Interaction.AdornerStretch" /> for the adorner panel along the y-axis. The default value is <see cref="F:Microsoft.Windows.Design.Interaction.AdornerStretch.None" />. 
                </returns>
      <param name="adorner">
                    The <see cref="T:System.Windows.UIElement" /> from which to read the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.VerticalStretch" /> attached property.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> is null.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerPanel.HorizontalStretch">
      <summary>
                    Gets or sets the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerStretch" /> value for the x-axis. This is a dependency property.
                </summary>
      <returns>
                    An <see cref="T:Microsoft.Windows.Design.Interaction.AdornerStretch" /> for the adorner panel along the x-axis. The default value is <see cref="F:Microsoft.Windows.Design.Interaction.AdornerStretch.None" />. 
                </returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPanel.HorizontalStretchProperty">
      <summary>
                    Identifies the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.HorizontalStretch" /> dependency property. 
                </summary>
      <returns>
                    The identifier for the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.HorizontalStretch" /> dependency property.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerPanel.IsContentFocusable">
      <summary>
                    Gets or sets the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.IsContentFocusable" /> value. This is a dependency property.
                </summary>
      <returns>true if the adorner panel's content may receive focus; otherwise, false. The default is false.
                </returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPanel.IsContentFocusableProperty">
      <summary>
                    Identifies the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.IsContentFocusable" /> dependency property.
                </summary>
      <returns>
                    The identifier for the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.IsContentFocusable" /> dependency property.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.MeasureOverride(System.Windows.Size)">
      <summary>
                    Measure adorner. 
                </summary>
      <returns>
                    A Size object that represents the size of the element.
                </returns>
      <param name="availableSize">
                    The available size the element can occupy.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerPanel.Model">
      <summary>
                    Gets or sets the <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> associated with the adorner panel. This is a dependency property.
                </summary>
      <returns>
                    The <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> associated with the adorner panel. 
                </returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPanel.ModelProperty">
      <summary>
                    Identifies the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.Model" /> dependency property.
                </summary>
      <returns>
                    The identifier for the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.Model" /> dependency property.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>
                    Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class..
                </summary>
      <param name="e">
                    The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerPanel.Order">
      <summary>
                    Gets or sets the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.Order" /> value. This is a dependency property.
                </summary>
      <returns>
                    An <see cref="T:Microsoft.Windows.Design.Interaction.AdornerOrder" /> instance that specifies the z-order of the adorner panel. 
                </returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPanel.OrderProperty">
      <summary>
                    Identifies the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.Order" /> dependency property.
                </summary>
      <returns>
                    The identifier for the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.Order" /> dependency property.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerPanel.Placements">
      <summary>
                    Gets or sets a collection of <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementValue" /> objects specifying the size and position of adorners in the adorner panel. This is a dependency property.
                </summary>
      <returns>
                    An <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection" /> which holds <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementValue" /> objects representing <paramref name="adorner" />'s size and position. 
                </returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPanel.PlacementsProperty">
      <summary>
                    Identifies the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.Placements" /> dependency property.
                </summary>
      <returns>
                    The identifier for the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.Placements" /> dependency property.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.SetHorizontalStretch(System.Windows.UIElement,Microsoft.Windows.Design.Interaction.AdornerStretch)">
      <summary>
                    Sets the value of the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.HorizontalStretch" /> attached property for the provided element. 
                </summary>
      <param name="adorner">
                    The <see cref="T:System.Windows.UIElement" /> to which to write the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.HorizontalStretch" /> attached property.
                </param>
      <param name="value">
                    The <see cref="T:Microsoft.Windows.Design.Interaction.AdornerStretch" /> value for the horizontal dimension.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.SetPlacements(System.Windows.UIElement,Microsoft.Windows.Design.Interaction.AdornerPlacementCollection)">
      <summary>
                    Sets the value of the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.Placements" /> attached property for the provided element. 
                </summary>
      <param name="adorner">
                    The <see cref="T:System.Windows.UIElement" /> to which to write the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.HorizontalStretch" /> attached property.
                </param>
      <param name="value">
                    An AdornerPlacementCollection which holds <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementValue" /> objects representing <paramref name="adorner" />'s size and position.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.SetTask(System.Windows.UIElement,Microsoft.Windows.Design.Interaction.Task)">
      <summary>
                    Writes the Task property to the specified element. 
                </summary>
      <param name="adorner">
                    The element to which to write the Task attached property.
                </param>
      <param name="value">
                    The <see cref="T:Microsoft.Windows.Design.Interaction.Task" /> to set.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPanel.SetVerticalStretch(System.Windows.UIElement,Microsoft.Windows.Design.Interaction.AdornerStretch)">
      <summary>
                    Sets the value of the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.VerticalStretch" /> attached property for the provided element. 
                </summary>
      <param name="adorner">
                    The element to which to write the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.VerticalStretch" /> attached property.
                </param>
      <param name="value">
                    The <see cref="T:Microsoft.Windows.Design.Interaction.AdornerStretch" /> value for the vertical dimension.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> is null.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerPanel.VerticalStretch">
      <summary>
                    Gets or sets the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerStretch" /> value for the y-axis. This is a dependency property.
                </summary>
      <returns>
                    An <see cref="T:Microsoft.Windows.Design.Interaction.AdornerStretch" /> for the adorner panel along the y-axis. The default value is <see cref="F:Microsoft.Windows.Design.Interaction.AdornerStretch.None" />. 
                </returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPanel.VerticalStretchProperty">
      <summary>
                    Identifies the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.VerticalStretch" /> dependency property.
                </summary>
      <returns>
                    The identifier for the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.VerticalStretch" /> dependency property.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerPanel.View">
      <summary>
                    Gets or sets the adorner panel's associated view. This is a dependency property.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.DependencyObject" /> representing the associated view.
                </returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPanel.ViewProperty">
      <summary>
                    Identifies the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.View" /> dependency property.
                </summary>
      <returns>
                    The identifier for the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerPanel.View" /> dependency property.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection">
      <summary>
                    Enables precise placement of adorners within an <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPanel" />.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection" /> class. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.PositionRelativeToAdornerHeight(System.Double,System.Double)">
      <summary>
                    Adds a placement term that positions the adorner panel relative to the adorner's height.
                </summary>
      <param name="factor">
                    A factor that is multiplied against the adorner's height.
                </param>
      <param name="offset">
                    An offset that is added to the result.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.PositionRelativeToAdornerHeight(System.Double,System.Double,System.Windows.DependencyObject)">
      <summary>
                    Adds a placement term that positions the adorner panel relative to the specified adorner's height.
                </summary>
      <param name="factor">
                    A factor that is multiplied against the adorner's height.
                </param>
      <param name="offset">
                    An offset that is added to the result.
                </param>
      <param name="relativeTo">
                    An optional adorner. If provided, the position is relative to the adorner's height.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.PositionRelativeToAdornerWidth(System.Double,System.Double)">
      <summary>
                    Adds a placement term that positions the adorner panel relative to the adorner's width.
                </summary>
      <param name="factor">
                    A factor that is multiplied against the adorner's width.
                </param>
      <param name="offset">
                    An offset that is added to the result.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.PositionRelativeToAdornerWidth(System.Double,System.Double,System.Windows.DependencyObject)">
      <summary>
                    Adds a placement term that positions the adorner panel relative to the specified adorner's width.
                </summary>
      <param name="factor">
                    A factor that is multiplied against the adorner's width.
                </param>
      <param name="offset">
                    An offset that is added to the result.
                </param>
      <param name="relativeTo">
                    An optional adorner. If provided, the position is relative to the adorner's width.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.PositionRelativeToContentHeight(System.Double,System.Double)">
      <summary>
                    Adds a placement term that positions the adorner panel relative to the adorned content's height.
                </summary>
      <param name="factor">
                    A factor that is multiplied against the adorned content's height.
                </param>
      <param name="offset">
                    An offset that is added to the result.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.PositionRelativeToContentHeight(System.Double,System.Double,System.Windows.DependencyObject)">
      <summary>
                    Adds a placement term that positions the adorner panel relative to the specified element's height.
                </summary>
      <param name="factor">
                    A factor that is multiplied against the adorned content's height.
                </param>
      <param name="offset">
                    An offset that is added to the result.
                </param>
      <param name="relativeTo">
                    An optional element. If provided, the position is relative to the element's height, instead of the height of the content.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.PositionRelativeToContentWidth(System.Double,System.Double)">
      <summary>
                    Adds a placement term that positions the adorner panel relative to the adorned content's width.
                </summary>
      <param name="factor">
                    A factor that is multiplied against the adorned content's width.
                </param>
      <param name="offset">
                    An offset that is added to the result.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.PositionRelativeToContentWidth(System.Double,System.Double,System.Windows.DependencyObject)">
      <summary>
                    Adds a placement term that positions the adorner panel relative to the specified element's width.
                </summary>
      <param name="factor">
                    A factor that is multiplied against the content's width.
                </param>
      <param name="offset">
                    An offset that is added to the result.
                </param>
      <param name="relativeTo">
                    An optional element. If provided, the position is relative to the element's width, instead of the width of the content.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.SizeRelativeToAdornerDesiredHeight(System.Double,System.Double)">
      <summary>
                    Adds a placement term that sizes the adorner panel relative to the adorner's desired height.
                </summary>
      <param name="factor">
                    A factor that is multiplied against the adorner's desired height.
                </param>
      <param name="offset">
                    An offset that is added to the result.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.SizeRelativeToAdornerDesiredHeight(System.Double,System.Double,System.Windows.DependencyObject)">
      <summary>
                    Add a placement term that sizes the adorner panel relative to the specified adorner's desired height.
                </summary>
      <param name="factor">
                    A factor that is multiplied against the specified adorner's desired height.
                </param>
      <param name="offset">
                    An offset that is added to the result.
                </param>
      <param name="relativeTo">
                    An optional adorner. If provided, the size is relative to the adorner's height.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.SizeRelativeToAdornerDesiredWidth(System.Double,System.Double)">
      <summary>
                    Adds a placement term that sizes the adorner panel relative to the adorner's desired width.
                </summary>
      <param name="factor">
                    A factor that is multiplied against the adorner's desired width.
                </param>
      <param name="offset">
                    An offset that is added to the result.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.SizeRelativeToAdornerDesiredWidth(System.Double,System.Double,System.Windows.DependencyObject)">
      <summary>
                    Adds a placement term that sizes the adorner panel relative to the specified adorner's desired width.
                </summary>
      <param name="factor">
                    A factor that is multiplied against the adorner's desired width.
                </param>
      <param name="offset">
                    An offset that is added to the result.
                </param>
      <param name="relativeTo">
                    An optional adorner. If provided, the size is relative to the adorner's width.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.SizeRelativeToContentHeight(System.Double,System.Double)">
      <summary>
                    Adds a placement term that sizes the adorner panel relative to the adorned content's height.
                </summary>
      <param name="factor">
                    A factor that is multiplied against the content's height.
                </param>
      <param name="offset">
                    An offset that is added to the result.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.SizeRelativeToContentHeight(System.Double,System.Double,System.Windows.DependencyObject)">
      <summary>
                    Adds a placement term that sizes the adorner panel relative to the specified element's height.
                </summary>
      <param name="factor">
                    A factor that is multiplied against the specified element's height.
                </param>
      <param name="offset">
                    An offset that is added to the result.
                </param>
      <param name="relativeTo">
                    An optional element. If provided, the size is relative to the element's height.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.SizeRelativeToContentWidth(System.Double,System.Double)">
      <summary>
                    Adds a placement term that sizes the adorner panel relative to the adorned content's width.
                </summary>
      <param name="factor">
                    A factor that is multiplied against the content's width.
                </param>
      <param name="offset">
                    An offset that is added to the result.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection.SizeRelativeToContentWidth(System.Double,System.Double,System.Windows.DependencyObject)">
      <summary>
                    Adds a placement term that sizes the adorner panel relative to the specified element's width.
                </summary>
      <param name="factor">
                    A factor that is multiplied against the specified element's width.
                </param>
      <param name="offset">
                    An offset that is added to the result.
                </param>
      <param name="relativeTo">
                    An optional element. If provided, the size is relative to the element's width.
                </param>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerPlacementDimension">
      <summary>
                    An enumeration that defines the dimension that should be applied to an <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementValue" /> structure.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPlacementDimension.Left">
      <summary>
                    The left side.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPlacementDimension.Top">
      <summary>
                    The top side.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPlacementDimension.Right">
      <summary>
                    The right side.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPlacementDimension.Bottom">
      <summary>
                    The bottom side.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPlacementDimension.Width">
      <summary>
                    The width.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerPlacementDimension.Height">
      <summary>
                    The height.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerPlacementValue">
      <summary>
                    Represents a single value in an <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection" />. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementValue.#ctor(Microsoft.Windows.Design.Interaction.AdornerPlacementDimension,System.Double)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementValue" /> class.
                </summary>
      <param name="term">
                    The term that should be applied to this value.
                </param>
      <param name="contribution">
                    The contribution this value makes to the overall placement.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerPlacementValue.Contribution">
      <summary>
                    Gets or sets the distance the placement term is affected by.
                </summary>
      <returns>
                    A double that is the distance the placement term is affected by.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementValue.Equals(Microsoft.Windows.Design.Interaction.AdornerPlacementValue)">
      <summary>
                    Returns a value indicating whether this instance is equal to a specified <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementValue" />.
                </summary>
      <returns>true if the objects are equal; otherwise, false.
                </returns>
      <param name="value">
                    The value to test.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementValue.Equals(System.Object)">
      <summary>
                    Returns a value indicating whether this instance is equal to a specified object.
                </summary>
      <param name="obj">
                    The object to test.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementValue.GetHashCode">
      <summary>
                    Returns the hash code for this structure.
                </summary>
      <returns>
                    The hash code of the structure.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementValue.op_Equality(Microsoft.Windows.Design.Interaction.AdornerPlacementValue,Microsoft.Windows.Design.Interaction.AdornerPlacementValue)">
      <summary>
                    Determines whether the two specified <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementValue" /> objects have the same value.
                </summary>
      <returns>true if the values are equal; otherwise, false.
                </returns>
      <param name="placementValue1"></param>
      <param name="placementValue2"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerPlacementValue.op_Inequality(Microsoft.Windows.Design.Interaction.AdornerPlacementValue,Microsoft.Windows.Design.Interaction.AdornerPlacementValue)">
      <summary>
                    Determines whether the two specified <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementValue" /> objects have different values.
                </summary>
      <returns>true if the values are not equal; otherwise, false.
                </returns>
      <param name="placementValue1"></param>
      <param name="placementValue2"></param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerPlacementValue.Term">
      <summary>
                    Gets or sets the placement term affected by this contribution amount.
                </summary>
      <returns>
                    An <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementDimension" /> that is the placement term affected by this contribution amount.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerProperties">
      <summary>
                    Defines a set of attached properties for a UI element to enable adorner appearance and behavior. 
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerProperties.ActualModel">
      <summary>
                    Gets the model that is being used by the adorner. This is an attached property.
                </summary>
      <returns>
                    The <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> that is attached to the adorner.
                </returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerProperties.ActualModelProperty">
      <summary>
                    Identifies the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerProperties.ActualModel" /> attached property.
                </summary>
      <returns>
                    The identifier for the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerProperties.ActualModel" /> attached property.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerProperties.ActualView">
      <summary>
                    Gets the view that is being used by the adorner. This is an attached property..
                </summary>
      <returns>
                    The view that is used by the adorner.
                </returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerProperties.ActualViewProperty">
      <summary>
                    Identifies the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerProperties.ActualView" /> attached property.
                </summary>
      <returns>
                    The identifier for the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerProperties.ActualView" /> attached property.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerProperties.GetActualModel(System.Windows.DependencyObject)">
      <summary>
                    Gets the model that is being used by the specified adorner.
                </summary>
      <returns>
                    The <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> that is attached to <paramref name="adorner" />.
                </returns>
      <param name="adorner">
                    The adorner element to retrieve the model for.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerProperties.GetActualView(System.Windows.DependencyObject)">
      <summary>
                    Gets the view that is being used by the specified adorner.
                </summary>
      <returns>
                    The view that is used by <paramref name="adorner" />.
                </returns>
      <param name="adorner">
                    The adorner element to retrieve the view for.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerProperties.GetLayout(System.Windows.DependencyObject)">
      <summary>
                    Gets a layout that is used to arrange the adorner with regard to its model or view.
                </summary>
      <returns>
                    The <see cref="T:Microsoft.Windows.Design.Interaction.AdornerLayout" /> for <paramref name="adorner" />.
                </returns>
      <param name="adorner">
                    The adorner element to retrieve the layout for.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerProperties.GetModel(System.Windows.DependencyObject)">
      <summary>
                    Gets the model item associated with the specified adorner.
                </summary>
      <returns>
                    The <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> associated with <paramref name="adorner" />.
                </returns>
      <param name="adorner">
                    The adorner element to retrieve the model item for.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerProperties.GetOrder(System.Windows.DependencyObject)">
      <summary>
                    Gets the relative z-order of the specified adorner.
                </summary>
      <returns>
                    An <see cref="T:Microsoft.Windows.Design.Interaction.AdornerOrder" /> specifying the relative z-order of <paramref name="adorner" />.
                </returns>
      <param name="adorner">
                    The adorner element to retrieve the order for.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerProperties.GetTask(System.Windows.DependencyObject)">
      <summary>
                    Gets the task for the specified adorner.
                </summary>
      <returns>
                    The <see cref="T:Microsoft.Windows.Design.Interaction.Task" /> associated with <paramref name="adorner" />.
                </returns>
      <param name="adorner">
                    The adorner element to retrieve the task for.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerProperties.GetView(System.Windows.DependencyObject)">
      <summary>
                    Gets the view for the specified adorner.
                </summary>
      <returns>
                    The view associated with <paramref name="adorner" />, or null if no view has been set.
                </returns>
      <param name="adorner">
                    The adorner element to retrieve the task for.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> is null.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerProperties.Layout">
      <summary>
                    Gets a layout that is used to arrange the adorner with regard to its model or view. This is an attached property.
                </summary>
      <returns>
                    The <see cref="T:Microsoft.Windows.Design.Interaction.AdornerLayout" /> for the adorner.
                </returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerProperties.LayoutProperty">
      <summary>
                    Identifies the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerProperties.Layout" /> attached property.
                </summary>
      <returns>
                    The identifier for the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerProperties.Layout" /> attached property.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerProperties.Model">
      <summary>
                    Gets the model item associated with the adorner. This is an attached property.
                </summary>
      <returns>
                    The <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> associated with the adorner.
                </returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerProperties.ModelProperty">
      <summary>
                    Identifies the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerProperties.Model" /> attached property.
                </summary>
      <returns>
                    The identifier for the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerProperties.Model" /> attached property.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerProperties.Order">
      <summary>
                    Gets the relative z-order of the adorner. This is an attached property.
                </summary>
      <returns>
                    An <see cref="T:Microsoft.Windows.Design.Interaction.AdornerOrder" /> specifying the relative z-order of the adorner.
                </returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerProperties.OrderProperty">
      <summary>
                    Identifies the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerProperties.Order" /> attached property.
                </summary>
      <returns>
                    The identifier for the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerProperties.Order" /> attached property.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerProperties.SetLayout(System.Windows.DependencyObject,Microsoft.Windows.Design.Interaction.AdornerLayout)">
      <summary>
                    Sets the layout for the specified adorner. 
                </summary>
      <param name="adorner">
                    The adorner element to set the layout for.
                </param>
      <param name="value">
                    The <see cref="T:Microsoft.Windows.Design.Interaction.AdornerLayout" /> to associate with <paramref name="adorner" />.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerProperties.SetModel(System.Windows.DependencyObject,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>
                    Sets the model item associated with the specified adorner.
                </summary>
      <param name="adorner">
                    The adorner element to set the model for.
                </param>
      <param name="value">
                    The <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />  to associate with <paramref name="adorner" />.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerProperties.SetOrder(System.Windows.DependencyObject,Microsoft.Windows.Design.Interaction.AdornerOrder)">
      <summary>
                    Sets the relative z-order of the specified adorner.
                </summary>
      <param name="adorner">
                    The adorner element to set the model for.
                </param>
      <param name="value">
                    An <see cref="T:Microsoft.Windows.Design.Interaction.AdornerOrder" /> specifying the relative z-order of <paramref name="adorner" />.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerProperties.SetTask(System.Windows.DependencyObject,Microsoft.Windows.Design.Interaction.Task)">
      <summary>
                    Sets the task for the specified adorner.
                </summary>
      <param name="adorner">
                    The adorner element to set the task for.
                </param>
      <param name="value">
                    The <see cref="T:Microsoft.Windows.Design.Interaction.Task" /> to associate with <paramref name="adorner" />.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerProperties.SetView(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>
                    Sets the view for the specified adorner.
                </summary>
      <param name="adorner">
                    The adorner element to set the view for.
                </param>
      <param name="value">
                    The view to associate with <paramref name="adorner" />.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="adorner" /> is null.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerProperties.Task">
      <summary>
                    Gets the task for the specified adorner. This is an attached property.
                </summary>
      <returns>
                    The <see cref="T:Microsoft.Windows.Design.Interaction.Task" /> associated with the adorner.
                </returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerProperties.TaskProperty">
      <summary>
                    Identifies the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerProperties.Task" /> attached property.
                </summary>
      <returns>
                    The identifier for the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerProperties.Task" /> attached property.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.AdornerProperties.View">
      <summary>
                    Gets the view for the adorner. This is an attached property.
                </summary>
      <returns>
                    The view associated with the adorner, or null if no view has been set.
                </returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerProperties.ViewProperty">
      <summary>
                    Identifies the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerProperties.View" /> attached property.
                </summary>
      <returns>
                    The identifier for the <see cref="P:Microsoft.Windows.Design.Interaction.AdornerProperties.View" /> attached property.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerResources">
      <summary>
                    Used to define a set of resources that can be used in XAML. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerResources.CreateResourceKey(System.Type,System.String)">
      <summary>
                    Creates a resource key for the specified type and member name. 
                </summary>
      <returns>
                    A new resource key.
                </returns>
      <param name="owningType">
                    The type that owns this resource.
                </param>
      <param name="publicMember">
                    The name of the public static member that exposes this resource.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owningType" /> or <paramref name="publicMember" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerResources.FindResource(System.Windows.ResourceKey)">
      <summary>
                    Locates a resource with the specified key.
                </summary>
      <param name="key">
                    The resource key to find.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.
                </exception>
      <exception cref="T:System.Windows.ResourceReferenceKeyNotFoundException">
        <paramref name="key" /> does not have a resource.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerResources.RegisterResources(Microsoft.Windows.Design.Interaction.LoadResourcesCallback)">
      <summary>
                    Registers a callback that can provide a resource dictionary. 
                </summary>
      <param name="callback">
                    A callback used to return the resource dictionary.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callback" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.AdornerResources.TryFindResource(System.Windows.ResourceKey)">
      <summary>
                    Locates a resource with the specified key.
                </summary>
      <returns>
                    The resource if it exists.
                
                    -or-
                null if the specified resource does not exist.
                </returns>
      <param name="key">
                    The key of the resource to find.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.
                </exception>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.AdornerStretch">
      <summary>
                    An enumeration used to identify how the particular dimension (X or Y) of an adorner behaves when Design view is scaled.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerStretch.None">
      <summary>
                    The dimension remains the same during scaling. Therefore, the adorner does not change size or scale during scaling.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerStretch.Stretch">
      <summary>
                    The dimension stretches during scaling. Therefore, the adorner gets larger, but the stroke of rendered elements/lines/pens does not increase.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.AdornerStretch.Scale">
      <summary>
                    The dimension scales during scaling. Therefore, the adorner gets larger, and the stroke of rendered elements/lines/pens increases.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs">
      <summary>
                    Provides data for the <see cref="E:Microsoft.Windows.Design.Interaction.ToolCommandBinding.CanExecute" /> event. 
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs.CanExecute">
      <summary>
                    Get or sets whether the command can be executed.
                </summary>
      <returns>true if the command can be executed; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs.Command">
      <summary>
                    Gets the command associated with this <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" />.
                </summary>
      <returns>
                    An <see cref="T:System.Windows.Input.ICommand" /> that represents a command associated with this <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" />.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs.Parameter">
      <summary>
                    Gets the parameter associated with this <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" />.
                </summary>
      <returns>
                    An object that represents the parameter associated with this <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" />. The return value may be null.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventHandler">
      <summary>
                    Represents the method that will handle the <see cref="E:Microsoft.Windows.Design.Interaction.ToolCommandBinding.CanExecute" /> events for tool commands.
                </summary>
      <param name="sender">
                    The source of the event.
                </param>
      <param name="e">
                    A <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> that contains the event data.
                </param>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.CommandExceptionEventArgs">
      <summary>
                    Provides data for the <see cref="E:Microsoft.Windows.Design.Interaction.DesignerView.CommandException" /> event defined on the <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" /> class.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.CommandExceptionEventArgs.#ctor(System.Windows.Input.ICommand,System.Exception)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.CommandExceptionEventArgs" /> class.
                </summary>
      <param name="command">
                    The command that raised the exception.
                </param>
      <param name="exception">
                    The exception that the command threw.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="command" /> or <paramref name="exception" /> is null.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.CommandExceptionEventArgs.Command">
      <summary>
                    Gets the command that was passed to the constructor.
                </summary>
      <returns>
                    An <see cref="T:System.Windows.Input.ICommand" /> that represents the command that was passed to the constructor.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.CommandExceptionEventArgs.Exception">
      <summary>
                    Gets the exception that was passed into the constructor.
                </summary>
      <returns>
                    An <see cref="T:System.Exception" /> that was passed into the constructor.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.CurrentDesignerView">
      <summary>
                    A context item that is used to store and report the current designer view that is being used in the editing context. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.CurrentDesignerView.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.CurrentDesignerView" /> class.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.CurrentDesignerView.ItemType">
      <summary>
                    Gets the item type of this item. 
                </summary>
      <returns>
                    A <see cref="T:System.Type" /> that represents the type of this item.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.CurrentDesignerView.View">
      <summary>
                    Gets the designer view that is currently being used. 
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" /> that is currently being used; or null if no view has been installed yet.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.DesignerView">
      <summary>
                    Provides a visual design surface for the designer.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.DesignerView.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" /> class.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.DesignerView.Adorners">
      <summary>
                    Gets the collection of adorners on this view.
                </summary>
      <returns>
                    A collection of all adorner panels on the design surface. 
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.DesignerView.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" /> overrides <see cref="M:Microsoft.Windows.Design.Interaction.DesignerView.ArrangeOverride(System.Windows.Size)" /> so it can make sure that all the layers it maintains are the same size as the view.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Size" /> object that represents the arranged size.
                </returns>
      <param name="arrangeSize">
                    The final size allowed for the arrange.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.DesignerView.Child">
      <summary>
                    Gets or sets the root element of the designer's UI.
                </summary>
      <returns>
                    The root <see cref="T:System.Windows.UIElement" /> of the designer's UI.
                </returns>
    </member>
    <member name="E:Microsoft.Windows.Design.Interaction.DesignerView.CommandException">
      <summary>
                    Occurs when an exception is raised in a command. 
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.DesignerView.Context">
      <summary>
                    Gets or sets the editing context for this view. 
                </summary>
      <returns>
                    The <see cref="T:Microsoft.Windows.Design.EditingContext" /> associated with the view.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.DesignerView.DesignerView">
      <summary>
                    Gets or sets the designer view attached property. This is a dependency property.
                </summary>
      <returns>
                    The <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" /> for the UI tree.
                </returns>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.DesignerView.DesignerViewProperty">
      <summary>
                    Identifies the <see cref="P:Microsoft.Windows.Design.Interaction.DesignerView.DesignerView" /> dependency property.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.DesignerView.FromContext(Microsoft.Windows.Design.EditingContext)">
      <summary>
                    Returns the designer view stored in the specified context.
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" /> stored in <paramref name="context" />, or null if a view does not exist.
                </returns>
      <param name="context">
                    The editing context to retrieve the designer view from.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.DesignerView.GetDesignerView(System.Windows.DependencyObject)">
      <summary>
                    Gets the value of the <see cref="P:Microsoft.Windows.Design.Interaction.DesignerView.DesignerView" /> attached property for the specified element.
                </summary>
      <param name="element">
                    The element in the tree to return the designer view for.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.DesignerView.GetVisualChild(System.Int32)">
      <summary>
                    Returns the visual children of the designer view.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Media.Visual" /> at the specified index.
                </returns>
      <param name="index">
                    The zero-based index of the visual child collection.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.DesignerView.IsContentHitTestVisible">
      <summary>
                    Gets or sets whether the content of the <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" /> is hit-tested and can receive mouse and keyboard input. 
                </summary>
      <returns>true if the <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" /> content is hit-tested; otherwise, false. The default is false.
                </returns>
    </member>
    <member name="E:Microsoft.Windows.Design.Interaction.DesignerView.MatchGesture">
      <summary>
                    Occurs when the <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" /> is matching a user input gesture to a command. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.DesignerView.MeasureOverride(System.Windows.Size)">
      <summary>
                    Override <see cref="M:Microsoft.Windows.Design.Interaction.DesignerView.MeasureOverride(System.Windows.Size)" /> to measure the layers.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Size" /> object that represents the size of the element.
                </returns>
      <param name="constraint">
                    The available size the element can occupy.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.DesignerView.OnCommandException(Microsoft.Windows.Design.Interaction.CommandExceptionEventArgs)">
      <summary>
                    Raises the <see cref="E:Microsoft.Windows.Design.Interaction.DesignerView.CommandException" /> event.
                </summary>
      <param name="e">
                    The <see cref="T:Microsoft.Windows.Design.Interaction.CommandExceptionEventArgs" /> used when raising this event.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.DesignerView.OnCreateAutomationPeer">
      <summary>
                    Returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" />.
                </summary>
      <returns>
                    An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" />.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.DesignerView.OnMatchGesture(Microsoft.Windows.Design.Interaction.MatchGestureEventArgs)">
      <summary>
                    Raises the <see cref="E:Microsoft.Windows.Design.Interaction.DesignerView.MatchGesture" /> event.
                </summary>
      <param name="e">
                    The <see cref="T:Microsoft.Windows.Design.Interaction.MatchGestureEventArgs" /> used when raising this event.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.DesignerView.VisualChildrenCount">
      <summary>
                    Gets the count of visual children on this object. 
                </summary>
      <returns>
                    An integer representing the number of visual children on this object. 
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.DragGestureData">
      <summary>
                    Provides additional information during a drag-and-drop operation.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.DragGestureData.#ctor(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem,System.Windows.Media.Visual,System.Windows.Point,System.Windows.Point,System.Windows.DragDropEffects,System.Windows.IDataObject)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.DragGestureData" /> class.
                </summary>
      <param name="context">
                    The editing context that owns this gesture data.
                </param>
      <param name="sourceModel">
                    The model where the gesture began.
                </param>
      <param name="targetModel">
                    The model the gesture is currently over.
                </param>
      <param name="coordinateReference">
                    The input element representing the coordinate reference for the points. This should be an element that never moves around, such as the <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" /> class.
                </param>
      <param name="startPosition">
                    The position of the mouse when the gesture was first initiated.
                </param>
      <param name="currentPosition">
                    The current position of the mouse.
                </param>
      <param name="allowedEffects">
                    The allowed drag-and-drop effects.
                </param>
      <param name="data">
                    The data for the drag.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />, <paramref name="sourceModel" />, <paramref name="targetModel" />, or <paramref name="data" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.DragGestureData.#ctor(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem,System.Windows.Media.Visual,System.Windows.Point,System.Windows.Point,System.Windows.DragDropEffects,System.Windows.IDataObject,System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.DragGestureData" /> class.
                </summary>
      <param name="context">
                    The editing context that owns this gesture data.
                </param>
      <param name="sourceModel">
                    This is the model where the gesture began.
                </param>
      <param name="targetModel">
                    This is the model the gesture is currently over.
                </param>
      <param name="coordinateReference">
                    The input element representing the coordinate reference for the points. This should be an element that never moves around, such as the <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" /> class.
                </param>
      <param name="startPosition">
                    The position of the mouse when the gesture was first initiated.
                </param>
      <param name="currentPosition">
                    The current position of the mouse.
                </param>
      <param name="allowedEffects">
                    The allowed drag-and-drop effects.
                </param>
      <param name="data">
                    The data for the drag.
                </param>
      <param name="sourceAdorner">
                    The source adorner to associate with the gesture, if it exists. This parameter can be null.
                </param>
      <param name="targetAdorner">
                    The target adorner to associate with the gesture, if it exists. This parameter can be null.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.DragGestureData.AllowedEffects">
      <summary>
                    Gets the set of allowed drag-and-drop effects.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Forms.DragDropEffects" /> object that represents the set of allowed drag-and-drop effects.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.DragGestureData.Data">
      <summary>
                    Gets the data passed in for the drag-and-drop operation.
                </summary>
      <returns>
                    An <see cref="T:System.Windows.IDataObject" /> that represents drag-and-drop operation data.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.DragGestureData.Effects">
      <summary>
                    Gets or sets the current drag-and-drop effects. 
                </summary>
      <returns>
                    A <see cref="T:System.Windows.DragDropEffects" /> object that represents the current drag-and-drop effects.
                </returns>
      <exception cref="T:System.ArgumentException">
                    The effects are not in the allowed effects.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.DragGestureData.FromEventArgs(Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs)">
      <summary>
                    Provides a simple utility that returns a <see cref="T:Microsoft.Windows.Design.Interaction.DragGestureData" /> object from a <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> object.
                </summary>
      <returns>
                    The <see cref="T:Microsoft.Windows.Design.Interaction.DragGestureData" /> object that is contained in the <see cref="P:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs.Parameter" /> property of the <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> object.
                </returns>
      <param name="e">
                    The <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> object passed into a command callback.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.DragGestureData.FromEventArgs(Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs)">
      <summary>
                    Provides a simple utility that returns a <see cref="T:Microsoft.Windows.Design.Interaction.DragGestureData" /> from an <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> object.
                </summary>
      <returns>
                    The <see cref="T:Microsoft.Windows.Design.Interaction.DragGestureData" /> object that is contained in the <see cref="P:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs.Parameter" /> property of the <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> object.
                </returns>
      <param name="e">
                    The <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> object passed into a command callback.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.
                </exception>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs">
      <summary>
                    Provides data for the <see cref="E:System.Windows.Input.CommandBinding.Executed" /> event.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs.Command">
      <summary>
                    Gets the command associated with this <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> object.
                </summary>
      <returns>
                    An <see cref="T:System.Windows.Input.ICommand" /> that represents a command associated with this <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" />.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs.Parameter">
      <summary>
                    Gets the parameter associated with this <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> object.
                </summary>
      <returns>
                    An object that represents the parameter associated with this <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> object. The return value can be null.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventHandler">
      <summary>
                    Represents the method that will handle the <see cref="E:System.Windows.Input.CommandBinding.Executed" /> events for tool commands.
                </summary>
      <param name="sender">
                    The source of the event.
                </param>
      <param name="e">
                    An <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> that contains the event data.
                </param>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.FocusedTask">
      <summary>
                    Contains the task that currently has the focus in a tool.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.FocusedTask.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.FocusedTask" /> class. 
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.FocusedTask.ItemType">
      <summary>
                    Gets the key that is used in the context item dictionary to identify this type of context item.
                </summary>
      <returns>
                    A <see cref="T:System.Type" /> object that represents the type of the <see cref="T:Microsoft.Windows.Design.Interaction.FocusedTask" />.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.FocusedTask.Task">
      <summary>
                    Gets the task that has the focus.
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Interaction.Task" /> object representing the task that has the focus.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.GestureData">
      <summary>
                    Provides information about a gesture. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.GestureData.#ctor(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.GestureData" /> class.
                </summary>
      <param name="context">
                    The editing context that owns this gesture data.
                </param>
      <param name="sourceModel">
                    The model where the gesture began.
                </param>
      <param name="targetModel">
                    The model the gesture is currently over.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />, <paramref name="sourceModel" />, or <paramref name="targetModel" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.GestureData.#ctor(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem,System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.GestureData" /> class. 
                </summary>
      <param name="context">
                    The editing context that owns this gesture data.
                </param>
      <param name="sourceModel">
                    The model where the gesture began.
                </param>
      <param name="targetModel">
                    The model the gesture is currently over.
                </param>
      <param name="sourceAdorner">
                    The source adorner to associate with the gesture, if it exists. This parameter can be null.
                </param>
      <param name="targetAdorner">
                    The target adorner to associate with the gesture, if it exists. This parameter can be null.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />, <paramref name="sourceModel" />, or <paramref name="targetModel" /> is null.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.GestureData.Adorners">
      <summary>
                    Gets the adorner collection for the designer view stored in the context. 
                </summary>
      <returns>
                    An <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the adorner collection for this context's designer view.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.GestureData.Context">
      <summary>
                    Gets the editing context associated with this gesture data.
                </summary>
      <returns>
                    The <see cref="T:Microsoft.Windows.Design.EditingContext" /> associated with this gesture data.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.GestureData.FromEventArgs(Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs)">
      <summary>
                    Provides a <see cref="T:Microsoft.Windows.Design.Interaction.GestureData" /> object from an <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> object.
                </summary>
      <returns>
                    The <see cref="T:Microsoft.Windows.Design.Interaction.GestureData" /> object that is contained in the <see cref="P:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs.Parameter" /> property of the <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> object.
                </returns>
      <param name="e">
                    The <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> object passed into a command callback.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.GestureData.FromEventArgs(Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs)">
      <summary>
                    Provides a <see cref="T:Microsoft.Windows.Design.Interaction.GestureData" /> object from an <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> object.
                </summary>
      <returns>
                    The <see cref="T:Microsoft.Windows.Design.Interaction.GestureData" /> object that is contained in the <see cref="P:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs.Parameter" /> property of the <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> object.
                </returns>
      <param name="e">
                    The <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> object passed into a command callback.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.GestureData.ImpliedSource">
      <summary>
                    Gets the model that is the source of this gesture. 
                </summary>
      <returns>
                    The <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> that is the source of this gesture.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.GestureData.ImpliedTarget">
      <summary>
                    Gets the model that is the target of this gesture. 
                </summary>
      <returns>
                    The <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> that represents the target of this gesture.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.GestureData.SourceAdorner">
      <summary>
                    Gets the source adorner in the view. 
                </summary>
      <returns>
                    A <see cref="T:System.Windows.UIElement" /> that is the adorner that initiated the gesture. The return value can be null if the gesture was not initiated by an adorner.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.GestureData.SourceModel">
      <summary>
                    Gets the object that is the source of this gesture. 
                </summary>
      <returns>
                    The <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> that is the source of this gesture.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.GestureData.TargetAdorner">
      <summary>
                    Gets the target adorner in the view. 
                </summary>
      <returns>
                    A <see cref="T:System.Windows.UIElement" /> that is the adorner the gesture is currently over. The return value can be null if the gesture is not over an adorner.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.GestureData.TargetModel">
      <summary>
                    Gets the object that is the target of this gesture. 
                </summary>
      <returns>
                    The <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> that represents the target of this gesture.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.IAdornerPlacement">
      <summary>
                    Specifies a placement term for an <see cref="T:Microsoft.Windows.Design.Interaction.AdornerPlacementCollection" />.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.IAdornerPlacement.GetPositionTerms(Microsoft.Windows.Design.Interaction.AdornerCoordinateSpace,System.Windows.UIElement,System.Windows.DependencyObject,System.Windows.Vector,System.Windows.Size)">
      <summary>
                    Returns an enumeration of positioning terms used to position an adorner.
                </summary>
      <returns>
                    An enumeration of positioning terms. If no positioning terms are used, this must return an empty enumeration.
                </returns>
      <param name="space">
                    The coordinate space of the owning adorner panel.
                </param>
      <param name="adorner">
                    The adorner to get position terms for.
                </param>
      <param name="view">
                    The view being adorned by the adorner.
                </param>
      <param name="zoom">
                    A vector indicating the zoom of the designer.
                </param>
      <param name="computedAdornerSize">
                    The final size of the view after it has been arranged.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="space" />, <paramref name="adorner" />, or <paramref name="view" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.IAdornerPlacement.GetSizeTerms(Microsoft.Windows.Design.Interaction.AdornerCoordinateSpace,System.Windows.UIElement,System.Windows.DependencyObject,System.Windows.Vector,System.Windows.Size)">
      <summary>
                    Returns an enumeration of sizing terms used to size the adorner.
                </summary>
      <returns>
                    An enumeration of sizing terms. If no size terms are used, this must return an empty enumeration.
                </returns>
      <param name="space">
                    The coordinate space of the owning adorner panel.
                </param>
      <param name="adorner">
                    The adorner to get size terms for.
                </param>
      <param name="view">
                    The view being adorned by the adorner.
                </param>
      <param name="zoom">
                    A vector indicating the zoom of the designer.
                </param>
      <param name="viewFinalSize">
                    The final size of the view after it has been arranged.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="space" />, <paramref name="adorner" />, or <paramref name="view" /> is null.
                </exception>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.LoadResourcesCallback">
      <summary>
                    Used when a resource for the specified key must be located.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.MatchGestureEventArgs">
      <summary>
                    Provides data for the <see cref="E:Microsoft.Windows.Design.Interaction.DesignerView.MatchGesture" /> event. 
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.MatchGestureEventArgs.Binding">
      <summary>
                    Gets or sets the input binding that was mapped to the input event. 
                </summary>
      <returns>
                    The input binding that was mapped to the input event.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.MatchGestureEventArgs.Data">
      <summary>
                    Gets or sets the gesture data associated with the input event. 
                </summary>
      <returns>
                    The gesture data associated with the input event.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.MatchGestureEventArgs.InputEvent">
      <summary>
                    Gets the input event that caused this event to be raised.
                </summary>
      <returns>
                    An <see cref="T:System.Windows.Input.InputEventArgs" /> for the input event that caused this event to be raised.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.ModelHitTestFilterCallback">
      <summary>
                    A callback delegate that can be assigned to the <see cref="P:Microsoft.Windows.Design.Interaction.Task.ModelFilter" /> property of a transacted task. 
                </summary>
      <returns>
                    The filter behavior for this filter.
                </returns>
      <param name="potentialHitTestTarget">
                    A model item under the mouse pointer.
                </param>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.MouseGestureData">
      <summary>
                    Provides information about the mouse position. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.MouseGestureData.#ctor(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem,System.Windows.Media.Visual,System.Windows.Point,System.Windows.Point)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.MouseGestureData" /> class.
                </summary>
      <param name="context">
                    The editing context that owns this gesture data.
                </param>
      <param name="sourceModel">
                    The model where the gesture began.
                </param>
      <param name="targetModel">
                    The model the gesture is currently over.
                </param>
      <param name="coordinateReference">
                    The input element representing the coordinate reference for the points. This should be an element that never moves around, such as the <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" />.
                </param>
      <param name="startPosition">
                    The position of the mouse when the gesture was first initiated.
                </param>
      <param name="currentPosition">
                    The current position of the mouse.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />, <paramref name="sourceModel" />, <paramref name="targetModel" />, or <paramref name="coordinateReference" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.MouseGestureData.#ctor(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem,System.Windows.Media.Visual,System.Windows.Point,System.Windows.Point,System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.MouseGestureData" /> class. 
                </summary>
      <param name="context">
                    The editing context that owns this gesture data.
                </param>
      <param name="sourceModel">
                    The model where the gesture began.
                </param>
      <param name="targetModel">
                    The model the gesture is currently over.
                </param>
      <param name="coordinateReference">
                    The input element representing the coordinate reference for the points. This should be an element that never moves around, such as the <see cref="T:Microsoft.Windows.Design.Interaction.DesignerView" />.
                </param>
      <param name="startPosition">
                    The position of the mouse when the gesture was first initiated.
                </param>
      <param name="currentPosition">
                    The current position of the mouse.
                </param>
      <param name="sourceAdorner">
                    The source adorner to associate with the gesture, if it exists. This parameter can be null.
                </param>
      <param name="targetAdorner">
                    The target adorner to associate with the gesture, if it exists. This parameter can be null.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.MouseGestureData.CurrentPosition">
      <summary>
                    Gets the current position of the mouse. 
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Point" /> object that represents the current position of the mouse.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.MouseGestureData.FromEventArgs(Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs)">
      <summary>
                    Provides a <see cref="T:Microsoft.Windows.Design.Interaction.MouseGestureData" /> object from an <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> object.
                </summary>
      <returns>
                    The <see cref="T:Microsoft.Windows.Design.Interaction.MouseGestureData" /> object contained in the <see cref="P:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs.Parameter" /> property of the <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> object.
                </returns>
      <param name="e">
                    The <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> object passed into a command callback.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.MouseGestureData.FromEventArgs(Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs)">
      <summary>
                    Provides a <see cref="T:Microsoft.Windows.Design.Interaction.MouseGestureData" /> from an <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> object.
                </summary>
      <returns>
                    The <see cref="T:Microsoft.Windows.Design.Interaction.MouseGestureData" /> object contained in the <see cref="P:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs.Parameter" /> property of the <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> object.
                </returns>
      <param name="e">
                    The <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> object passed into a command callback.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.MouseGestureData.PositionDelta">
      <summary>
                    Gets the offset between starting and ending positions.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Vector" /> object that represents the offset between the starting and ending positions of the mouse.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.MouseGestureData.StartPosition">
      <summary>
                    Gets the starting position of the mouse. 
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Point" /> object that represents the starting position of the mouse.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.MouseGestureData.TranslatePoint(System.Windows.Point,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>
                    Translates the specified point to the coordinate system of the visual for the specified model. 
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Point" /> object that represents the translated point.
                </returns>
      <param name="pt">
                    The point to translate.
                </param>
      <param name="referenceTo">
                    The model to translate coordinates into.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="referenceTo" /> is null.
                </exception>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.Selection">
      <summary>
                    Represents a set of objects selected by a user in a designer. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Selection.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.Selection" /> class.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Selection.#ctor(Microsoft.Windows.Design.Model.ModelItem[])">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.Selection" /> class with the specified array of <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> objects.
                </summary>
      <param name="selectedObjects">
                    An array of <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> objects to add to the selection.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="selectedObjects" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Selection.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Windows.Design.Model.ModelItem})">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.Selection" /> class with the specified enumeration of <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> objects.
                </summary>
      <param name="selectedObjects">
                    An enumeration of <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> objects to add to the selection.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="selectedObjects" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Selection.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Windows.Design.Model.ModelItem},System.Predicate{Microsoft.Windows.Design.Model.ModelItem})">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.Selection" /> class with the specified enumeration of <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> objects and predicate.
                </summary>
      <param name="selectedObjects">
                    An enumeration of <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> objects to add to the selection.
                </param>
      <param name="match">
                    Only those objects in <paramref name="selectedObjects" /> that match the predicate are added to the selection.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="selectedObjects" /> or <paramref name="match" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Selection.#ctor(System.Collections.IEnumerable)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.Selection" /> class with the specified enumeration of objects.
                </summary>
      <param name="selectedObjects">
                    An enumeration of objects to add to the selection.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="selectedObjects" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Selection.#ctor(System.Collections.IEnumerable,System.Predicate{Microsoft.Windows.Design.Model.ModelItem})">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.Selection" /> class with the specified enumeration of objects and predicate.
                </summary>
      <param name="selectedObjects">
                    An enumeration of objects to add to the selection.
                </param>
      <param name="match">
                    Only those objects in <paramref name="selectedObjects" /> that match the predicate are added to the selection.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="selectedObjects" /> or <paramref name="match" /> is null.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Selection.ItemType">
      <summary>
                    Gets the type of <see cref="T:Microsoft.Windows.Design.Interaction.Selection" />.
                </summary>
      <returns>
                    The type of <see cref="T:Microsoft.Windows.Design.Interaction.Selection" />.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Selection.PrimarySelection">
      <summary>
                    Gets the primary selection object.
                </summary>
      <returns>
                    If the selection contains objects, the primary selection object; otherwise, null.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Selection.SelectedObjects">
      <summary>
                    Gets an enumeration of the objects in the selection.
                </summary>
      <returns>
                    An enumeration of the objects in the selection.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Selection.SelectionCount">
      <summary>
                    Gets the number of objects in the selection.
                </summary>
      <returns>
                    The number of objects in the selection.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.SelectionOperations">
      <summary>
                    Provides standard operations that control the programmatic selection of objects in a designer. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.SelectionOperations.Select(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>
                    Processes a request to programmatically select an object in the designer.
                </summary>
      <returns>
                    A new empty selection, a new selection containing new objects, or the existing selection. See the remarks section for more information.
                </returns>
      <param name="context">
                    The current editing context.
                </param>
      <param name="itemToSelect">
                    The object to select.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="itemToSelect" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.SelectionOperations.SelectOnly(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>
                    Processes a request to programmatically select a single object in the designer.
                </summary>
      <returns>
                    A selection containing the object to select.
                </returns>
      <param name="context">
                    The current editing context.
                </param>
      <param name="itemToSelect">
                    The object to select.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="itemToSelect" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.SelectionOperations.Subscribe(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.SubscribeContextCallback{Microsoft.Windows.Design.Interaction.Selection})">
      <summary>
                    Adds a callback method that is invoked when the selection in the editing context changes.
                </summary>
      <param name="context">
                    The editing context of interest.
                </param>
      <param name="handler">
                    The method to invoke when the selection changes.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="handler" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.SelectionOperations.Toggle(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>
                    Processes a request to programmatically toggle the selection state of an object in the designer.
                </summary>
      <returns>
                    A new selection that contains or does not contain the object to toggle. See the remarks section for more information.
                </returns>
      <param name="context">
                    The current editing context.
                </param>
      <param name="itemToToggle">
                    The object to select or deselect.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="itemToToggle" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.SelectionOperations.Union(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>
                    Processes a request to programmatically add an object in the designer to the existing selection.
                </summary>
      <returns>
                    A new selection containing the new object, or the existing selection. See the remarks section for more information.
                </returns>
      <param name="context">
                    The current editing context.
                </param>
      <param name="itemToAdd">
                    The object to select.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="itemToAdd" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.SelectionOperations.Unsubscribe(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.SubscribeContextCallback{Microsoft.Windows.Design.Interaction.Selection})">
      <summary>
                    Removes a callback method so that it is not invoked when the selection in the editing context changes.
                </summary>
      <param name="context">
                    The editing context of interest.
                </param>
      <param name="handler">
                    The method that is removed.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="handler" /> is null.
                </exception>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.Task">
      <summary>
                    Represents a collection of commands and input bindings to those commands. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Task.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.Task" /> class.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Task.AdornerFilter">
      <summary>
                    Gets or sets the filter that is used to filter the set of adorners seen by the designer's hit test algorithm. 
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Interaction.ModelHitTestFilterCallback" /> that is used to filter the set of adorners seen by the designer's hit test algorithm.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Task.BeginFocus(Microsoft.Windows.Design.Interaction.GestureData)">
      <summary>
                    Begins to set the focus for the task. 
                </summary>
      <param name="data">
                    The gesture data for the focus.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> is null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    The task already has the focus.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Task.CommandBindings">
      <summary>
                    Gets the <see cref="T:System.Windows.Input.CommandBindingCollection" /> for a task. 
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Input.CommandBindingCollection" /> instance containing the command bindings for this task,
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Task.Complete">
      <summary>
                    Completes changes that were made while this task has the focus. 
                </summary>
      <exception cref="T:System.InvalidOperationException">
                    The task does not have the focus.
                </exception>
    </member>
    <member name="E:Microsoft.Windows.Design.Interaction.Task.Completed">
      <summary>
                    Occurs when this task has completed.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Task.Cursor">
      <summary>
                    Gets or sets the cursor for a task.
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Input.Cursor" /> for a task.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Task.Description">
      <summary>
                    Gets or sets the description for this task. 
                </summary>
      <returns>
                    A description for this task.
                </returns>
    </member>
    <member name="E:Microsoft.Windows.Design.Interaction.Task.FocusDeactivated">
      <summary>
                    Occurs when focus for this task is deactivated.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Task.InputBindings">
      <summary>
                    Gets the <see cref="T:System.Windows.Input.InputBindingCollection" /> for a task.
                </summary>
      <returns>
                    An <see cref="T:System.Windows.Input.InputBindingCollection" /> instance that contains the input bindings for this task.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Task.IsFocused">
      <summary>
                    Gets a value indicating whether this task has the focus.
                </summary>
      <returns>true if this task has the focus; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Task.ModelFilter">
      <summary>
                    Gets or sets the filter that is used to filter the set of model items seen by the designer's hit test algorithm. 
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Interaction.ModelHitTestFilterCallback" /> that is used to filter the set of model items seen by the designer's hit test algorithm.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Task.OnCompleted(System.EventArgs)">
      <summary>
                    Raises the <see cref="E:Microsoft.Windows.Design.Interaction.Task.Completed" /> event. 
                </summary>
      <param name="e">
                    An <see cref="T:System.EventArgs" /> that contains the event data. 
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Task.OnFocusDeactivated(System.EventArgs)">
      <summary>
                    Raises the <see cref="E:Microsoft.Windows.Design.Interaction.Task.FocusDeactivated" /> event.
                </summary>
      <param name="e">
                    An <see cref="T:System.EventArgs" /> that contains the event data. 
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Task.OnReverted(System.EventArgs)">
      <summary>
                    Raises the <see cref="E:Microsoft.Windows.Design.Interaction.Task.Reverted" /> event. 
                </summary>
      <param name="e">
                    An <see cref="T:System.EventArgs" /> that contains the event data. 
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Task.Revert">
      <summary>
                    Reverts this task.
                </summary>
      <exception cref="T:System.InvalidOperationException">
                    The task is not active.
                </exception>
    </member>
    <member name="E:Microsoft.Windows.Design.Interaction.Task.Reverted">
      <summary>
                    Occurs when this task is reverted.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Task.ToolCommandBindings">
      <summary>
                    Gets the <see cref="T:Microsoft.Windows.Design.Interaction.ToolCommandBindingCollection" /> for a task.
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Interaction.ToolCommandBindingCollection" /> instance that contains the tool command bindings for this task.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.Tool">
      <summary>
                    Represents a tool that determines the mode of the designer. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Tool.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.Tool" /> class.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Tool.Context">
      <summary>
                    Gets the editing context for code within the tool. 
                </summary>
      <returns>
                    An <see cref="T:Microsoft.Windows.Design.EditingContext" /> for code within the tool.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Tool.Cursor">
      <summary>
                    Gets or sets the default cursor for the mouse. 
                </summary>
      <returns>
                    A <see cref="T:System.Windows.Input.Cursor" /> for the mouse.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Tool.FocusedTask">
      <summary>
                    Gets the currently focused task, if one exists.
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Interaction.Task" /> object that represents the task that currently has focus.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Tool.ItemType">
      <summary>
                    Gets the type of the tool.
                </summary>
      <returns>
                    A <see cref="T:System.Type" /> that represents the type of the tool.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Tool.OnActivate(Microsoft.Windows.Design.Interaction.Tool)">
      <summary>
                    Called when a tool is activated. 
                </summary>
      <param name="previousTool">
                    The tool that was in the context before this tool became active. The default <see cref="T:Microsoft.Windows.Design.Interaction.Tool" /> implementation does nothing with this parameter.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Tool.OnDeactivate">
      <summary>
                    Called when a tool is being deactivated. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.Tool.OnItemChanged(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.ContextItem)">
      <summary>
                    Adds activate and deactivate semantics to the <see cref="T:Microsoft.Windows.Design.Interaction.Tool" /> class.
                </summary>
      <param name="context">
                    The editing context where the change is occurring.
                </param>
      <param name="previousItem">
                    The previous tool.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.Tool.Tasks">
      <summary>
                    Gets the set of tasks this tool provides. 
                </summary>
      <returns>
                    A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of tasks this tool provides.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.ToolAction">
      <summary>
                    Represents a user gesture. 
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.None">
      <summary>
                    No action.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.Down">
      <summary>
                    A mouse button has been pressed.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.Up">
      <summary>
                    A mouse button has been released.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.Move">
      <summary>
                    The mouse has been moved.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.Wheel">
      <summary>
                    The mouse wheel has been moved.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.Click">
      <summary>
                    A mouse button has been clicked.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.DoubleClick">
      <summary>
                    A mouse button has been double-clicked. Double-click and single-click interact as follows: <see cref="F:Microsoft.Windows.Design.Interaction.ToolAction.Click" />, <see cref="F:Microsoft.Windows.Design.Interaction.ToolAction.Click" />, <see cref="F:Microsoft.Windows.Design.Interaction.ToolAction.DoubleClick" />.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.Enter">
      <summary>
                    The mouse has entered an element. If the mouse enters an adorner, an <see cref="F:Microsoft.Windows.Design.Interaction.ToolAction.Enter" /> event is only raised if the target of the adorner is different from the last target.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.Leave">
      <summary>
                    The mouse has left an element. If the mouse leaves an adorner, a <see cref="F:Microsoft.Windows.Design.Interaction.ToolAction.Leave" /> event is only raised if the new target is different from the adorner’s target.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.Hover">
      <summary>
                    The mouse has stopped for a short time over an element or adorner. A new hover event is raised when the mouse passes over a different element.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.DragIntent">
      <summary>
                    The user has held a mouse button down and moved the mouse beyond a certain threshold. This indicates the user’s intent to begin a drag operation.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.DragEnter">
      <summary>
                    A <see cref="F:Microsoft.Windows.Design.Interaction.ToolAction.DragEnter" /> event that occurs because of a prior call to DragDrop.DoDragDrop. The source and target objects always refer to the elements, not the adorners.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.DragOver">
      <summary>
                    A <see cref="F:Microsoft.Windows.Design.Interaction.ToolAction.DragOver" /> event that occurs because of a prior call to DragDrop.DoDragDrop. The source and target objects always refer to the elements, not the adorners.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.DragLeave">
      <summary>
                    A <see cref="F:Microsoft.Windows.Design.Interaction.ToolAction.DragLeave" /> event that occurs because of a prior call to DragDrop.DoDragDrop. The source and target objects always refer to the elements, not the adorners.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.DragDrop">
      <summary>
                    A <see cref="F:Microsoft.Windows.Design.Interaction.ToolAction.DragDrop" /> event that occurs because of a prior call to DragDrop.DoDragDrop. The source and target objects always refer to the elements, not the adorners.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.DragFeedback">
      <summary>
                    A <see cref="F:Microsoft.Windows.Design.Interaction.ToolAction.DragFeedback" /> event that occurs because of a prior call to DragDrop.DoDragDrop. The source and target objects always refer to the elements, not the adorners.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.DragComplete">
      <summary>
                    The user held a mouse button down and moved the mouse. This causes a <see cref="F:Microsoft.Windows.Design.Interaction.ToolAction.DragIntent" /> to be signaled. Next, the user has released that mouse button, signaling the drag has completed.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Interaction.ToolAction.DragOutside">
      <summary>
                    The user has dragged an item off the edge of the design surface. You may bind a command to this gesture to invoke a drag-and-drop operation.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.ToolActionEventArgs">
      <summary>
                    Provides data for <see cref="T:Microsoft.Windows.Design.Interaction.ToolAction" /> events.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolActionEventArgs.#ctor(Microsoft.Windows.Design.Interaction.ToolAction,System.EventArgs,System.Windows.Input.InputDevice,System.Int32)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.ToolActionEventArgs" /> class.
                </summary>
      <param name="toolAction">
                    The tool action associated with this event.
                </param>
      <param name="sourceEvent">
                    The event that caused this action.
                </param>
      <param name="inputDevice">
                    The input device to associate with this event.
                </param>
      <param name="timestamp">
                    The time when the input occurred.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceEvent" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolActionEventArgs.#ctor(Microsoft.Windows.Design.Interaction.ToolAction,System.Windows.Input.InputEventArgs)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.ToolActionEventArgs" /> class.
                </summary>
      <param name="toolAction">
                    The tool action associated with this event.
                </param>
      <param name="sourceEvent">
                    The event that caused this action.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceEvent" /> is null.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ToolActionEventArgs.SourceEvent">
      <summary>
                    Gets the input event that caused this tool action event to occur.
                </summary>
      <returns>
                    An <see cref="T:System.EventArgs" /> that represents the input event that caused this tool action event to occur.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ToolActionEventArgs.ToolAction">
      <summary>
                    Gets the tool action associated with this event.
                </summary>
      <returns>
                    The tool action associated with this event.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolActionEventArgs.ToString">
      <summary>
                    Returns a string describing the event for diagnostic purposes.
                </summary>
      <returns>
                    A diagnostic string describing the event.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.ToolCommand">
      <summary>
                    Acts as a command identifier and as a unified way of invoking a particular command.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommand.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.ToolCommand" /> class. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommand.#ctor(System.String)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.ToolCommand" /> class with the specified command name. 
                </summary>
      <param name="commandName">
                    The name of the command.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="commandName" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommand.CanExecute(Microsoft.Windows.Design.Interaction.GestureData)">
      <summary>
                    Locates a command binding for the command and asks if it is enabled. 
                </summary>
      <returns>true if the command is enabled; false if it is disabled or there is no binding for it.
                </returns>
      <param name="data">
                    The gesture data that is to be passed to the command. Gesture data is required as it provides a context object from which the <see cref="M:Microsoft.Windows.Design.Interaction.ToolCommand.CanExecute(Microsoft.Windows.Design.Interaction.GestureData)" /> method can locate the active tool.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> is null.
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="data" />.Context is null.
                </exception>
    </member>
    <member name="E:Microsoft.Windows.Design.Interaction.ToolCommand.CanExecuteChanged">
      <summary>
                    Occurs when the status of this command changes.
                </summary>
      <exception cref="T:System.NotSupportedException">
                    When used.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommand.Execute(Microsoft.Windows.Design.Interaction.GestureData)">
      <summary>
                    Locates a command binding for the command and executes it. 
                </summary>
      <param name="data">
                    The gesture data that is to be passed to the command. Gesture data is required as it provides a context object from which the <see cref="M:Microsoft.Windows.Design.Interaction.ToolCommand.Execute(Microsoft.Windows.Design.Interaction.GestureData)" /> method can locate the active tool.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> is null.
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="data" />.Context is null.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ToolCommand.Name">
      <summary>
                    Gets the name of this command.
                </summary>
      <returns>
                    A string representing the name of this command, or an empty string if the command has no name.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommand.System#Windows#Input#ICommand#CanExecute(System.Object)">
      <summary>
                    For a description of this member, see <see cref="M:System.Windows.Input.ICommand.CanExecute(System.Object)" />.
                </summary>
      <param name="parameter"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommand.System#Windows#Input#ICommand#Execute(System.Object)">
      <summary>
                    For a description of this member, see <see cref="M:System.Windows.Input.ICommand.Execute(System.Object)" />.
                </summary>
      <param name="parameter"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommand.ToString">
      <summary>
                    Returns the name of this command.
                </summary>
      <returns>
                    The name of this command. 
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.ToolCommandBinding">
      <summary>
                    Acts as a bridge between a command and an event handler which implements it.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommandBinding.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.ToolCommandBinding" /> class.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommandBinding.#ctor(Microsoft.Windows.Design.Interaction.ToolCommand)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.ToolCommandBinding" /> class.
                </summary>
      <param name="command">
                    The command to bind.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="command" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommandBinding.#ctor(Microsoft.Windows.Design.Interaction.ToolCommand,Microsoft.Windows.Design.Interaction.ExecutedToolEventHandler)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.ToolCommandBinding" /> class.
                </summary>
      <param name="command">
                    The command to bind.
                </param>
      <param name="executedToolEventHandler">
                    The event handler to raise when the command is executed.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="command" /> or <paramref name="executedToolEventHandler" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommandBinding.#ctor(Microsoft.Windows.Design.Interaction.ToolCommand,Microsoft.Windows.Design.Interaction.ExecutedToolEventHandler,Microsoft.Windows.Design.Interaction.CanExecuteToolEventHandler)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.ToolCommandBinding" /> class.
                </summary>
      <param name="command">
                    The command to bind.
                </param>
      <param name="executedToolEventHandler">
                    The event handler to raise when the command is executed.
                </param>
      <param name="canExecuteToolEventHandler">
                    The event handler to raise when the <see cref="M:Microsoft.Windows.Design.Interaction.ToolCommand.CanExecute(Microsoft.Windows.Design.Interaction.GestureData)" /> method is invoked.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="command" />, <paramref name="executeRoutedEventHandler" />, or <paramref name="canExecuteRoutedEventHandler" /> is null.
                </exception>
    </member>
    <member name="E:Microsoft.Windows.Design.Interaction.ToolCommandBinding.CanExecute">
      <summary>
                    Occurs when QueryEnabled for the command is called.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ToolCommandBinding.Command">
      <summary>
                    Gets or sets the tool command associated with this binding.
                </summary>
      <returns>
                    The tool command associated with this binding.
                </returns>
    </member>
    <member name="E:Microsoft.Windows.Design.Interaction.ToolCommandBinding.Execute">
      <summary>
                    Occurs when the command is executed.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.ToolCommandBindingCollection">
      <summary>
                    Represents a collection of tool command bindings.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommandBindingCollection.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.ToolCommandBindingCollection" /> class.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommandBindingCollection.AddRange(System.Collections.Generic.ICollection{Microsoft.Windows.Design.Interaction.ToolCommandBinding})">
      <summary>
                    Adds the specified bindings to the collection.
                </summary>
      <param name="bindings">
                    The bindings to add.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindings" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommandBindingCollection.InsertItem(System.Int32,Microsoft.Windows.Design.Interaction.ToolCommandBinding)">
      <summary>
                    Inserts an item in to the collection.
                </summary>
      <param name="index">
                    The index where to add the item.
                </param>
      <param name="item">
                    The item to add.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolCommandBindingCollection.SetItem(System.Int32,Microsoft.Windows.Design.Interaction.ToolCommandBinding)">
      <summary>
                    Sets the value of an item in the collection.
                </summary>
      <param name="index">
                    The index of the value to set.
                </param>
      <param name="item">
                    The value to set at the index.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is null.
                </exception>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.ToolGesture">
      <summary>
                    Represents a tool interaction with the mouse. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolGesture.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.ToolGesture" /> class.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolGesture.#ctor(Microsoft.Windows.Design.Interaction.ToolAction)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.ToolGesture" /> class.
                </summary>
      <param name="action">
                    The action to take.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolGesture.#ctor(Microsoft.Windows.Design.Interaction.ToolAction,System.Windows.Input.MouseButton)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.ToolGesture" /> class.
                </summary>
      <param name="action">
                    The action to take.
                </param>
      <param name="button">
                    Modifies the button states to only allow the specified button. For example, if you wanted to make a "Click" action only valid for the left mouse button, you would pass <see cref="F:System.Windows.Input.MouseButton.Left" /> in this parameter. The default is to allow all buttons.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolGesture.#ctor(Microsoft.Windows.Design.Interaction.ToolAction,System.Windows.Input.MouseButton,System.Windows.Input.ModifierKeys)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.ToolGesture" /> class.
                </summary>
      <param name="action">
                    The action to take.
                </param>
      <param name="button">
                    Modifies the button states to only allow the specified button. For example, if you wanted to make a "Click" action only valid for the left mouse button, you would pass <see cref="F:System.Windows.Input.MouseButton.Left" /> in this parameter. The default is to allow all buttons.
                </param>
      <param name="modifiers">
                    The keyboard modifiers to use. By default, any keyboard modifiers are valid. You can restrict the set of valid modifiers by supplying them in this parameter.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ToolGesture.LeftButton">
      <summary>
                    Gets or sets whether this gesture is allowed to be performed while the left mouse button is pressed.
                </summary>
      <returns>
                    Returns <see cref="F:System.Windows.Input.MouseButtonState.Pressed" /> if this gesture is allowed to be performed while the left mouse button is pressed. The default returns <see cref="F:System.Windows.Input.MouseButtonState.Pressed" />.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)">
      <summary>
                    Returns a value indicating whether this gesture matches an input event.
                </summary>
      <returns>true if this gesture matches the input event; otherwise, false.
                </returns>
      <param name="targetElement">
                    The target element for this gesture.
                </param>
      <param name="inputEventArgs">
                    The input event to compare with this gesture.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputEventArgs" /> is null.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ToolGesture.MiddleButton">
      <summary>
                    Gets or sets whether if this gesture is allowed to be performed while the middle mouse button is pressed. 
                </summary>
      <returns>
                    Returns <see cref="F:System.Windows.Input.MouseButtonState.Pressed" /> if this gesture is allowed to be performed while the middle mouse button is pressed. The default returns <see cref="F:System.Windows.Input.MouseButtonState.Pressed" />.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ToolGesture.Modifiers">
      <summary>
                    Gets or sets the modifier keys that are allowed to be pressed for this gesture. 
                </summary>
      <returns>
                    Returns the modifier keys that are allowed to be pressed for this gesture. The default returns the combination of all modifier keys.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ToolGesture.RightButton">
      <summary>
                    Gets or sets whether this gesture is allowed to be performed while the right mouse button is pressed. 
                </summary>
      <returns>
                    Returns <see cref="F:System.Windows.Input.MouseButtonState.Pressed" /> if this gesture is allowed to be performed while the right mouse button is pressed. The default returns <see cref="F:System.Windows.Input.MouseButtonState.Pressed" />.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ToolGesture.ToolAction">
      <summary>
                    Gets or sets the action associated with this gesture.
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Interaction.ToolAction" /> associated with this gesture.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.ToolGesture.ToString">
      <summary>
                    Returns a string that describes the gesture for diagnostic purposes.
                </summary>
      <returns>
                    A diagnostic string that describes the gesture.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ToolGesture.XButton1">
      <summary>
                    Gets or sets whether this gesture is allowed to be performed while the xbutton1 mouse button is pressed. 
                </summary>
      <returns>
                    Returns <see cref="F:System.Windows.Input.MouseButtonState.Pressed" /> if this gesture is allowed to be performed while the xbutton1 mouse button is pressed. The default returns <see cref="F:System.Windows.Input.MouseButtonState.Pressed" />.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.ToolGesture.XButton2">
      <summary>
                    Gets or sets whether this gesture is allowed to be performed while the xbutton2 mouse button is pressed. 
                </summary>
      <returns>
                    Returns <see cref="F:System.Windows.Input.MouseButtonState.Pressed" /> if this gesture is allowed to be performed while the xbutton2 mouse button is pressed. The default returns <see cref="F:System.Windows.Input.MouseButtonState.Pressed" />.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Interaction.WheelGestureData">
      <summary>
                    Provides gesture data about the mouse wheel.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.WheelGestureData.#ctor(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem,System.Int32)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.WheelGestureData" /> class.
                </summary>
      <param name="context">
                    The editing context that owns this gesture data.
                </param>
      <param name="sourceModel">
                    The model where the gesture began.
                </param>
      <param name="targetModel">
                    The model the gesture is currently over.
                </param>
      <param name="delta">
                    The amount the wheel has moved.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />, <paramref name="sourceModel" />, or <paramref name="targetModel" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.WheelGestureData.#ctor(Microsoft.Windows.Design.EditingContext,Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem,System.Int32,System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Interaction.WheelGestureData" /> class. 
                </summary>
      <param name="context">
                    The editing context that owns this gesture data.
                </param>
      <param name="sourceModel">
                    The model where the gesture began.
                </param>
      <param name="targetModel">
                    The model the gesture is currently over.
                </param>
      <param name="delta">
                    The amount the wheel has moved.
                </param>
      <param name="sourceAdorner">
                    The source adorner to associate with the gesture, if it exists. This parameter can be null.
                </param>
      <param name="targetAdorner">
                    The target adorner to associate with the gesture, if it exists. This parameter can be null.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />, <paramref name="sourceModel" /> or <paramref name="targetModel" /> is null.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Interaction.WheelGestureData.Delta">
      <summary>
                    Gets the scroll delta from the mouse scroll wheel.
                </summary>
      <returns>
                    An integer representing the amount that the scroll wheel has moved.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.WheelGestureData.FromEventArgs(Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs)">
      <summary>
                    Provides a <see cref="T:Microsoft.Windows.Design.Interaction.WheelGestureData" /> object from an <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> object.
                </summary>
      <returns>
                    The <see cref="T:Microsoft.Windows.Design.Interaction.WheelGestureData" /> object that is contained in the <see cref="P:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs.Parameter" /> property of the <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> object.
                </returns>
      <param name="e">
                    The <see cref="T:Microsoft.Windows.Design.Interaction.CanExecuteToolEventArgs" /> object passed into a command callback.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Interaction.WheelGestureData.FromEventArgs(Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs)">
      <summary>
                    Provides a <see cref="T:Microsoft.Windows.Design.Interaction.WheelGestureData" /> object from an <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> object.
                </summary>
      <returns>
                    The <see cref="T:Microsoft.Windows.Design.Interaction.WheelGestureData" /> object that is contained in the <see cref="P:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs.Parameter" /> property of the <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> object.
                </returns>
      <param name="e">
                    The <see cref="T:Microsoft.Windows.Design.Interaction.ExecutedToolEventArgs" /> object passed into a command callback.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.
                </exception>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.CreateOptions">
      <summary>
                    Specifies how to create a new item.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Model.CreateOptions.None">
      <summary>
                    Just creates the object and does not perform any operations on it. This is the default.
                </summary>
    </member>
    <member name="F:Microsoft.Windows.Design.Model.CreateOptions.InitializeDefaults">
      <summary>
                    Creates the item and specifies that the object should perform any default initialization. This flag is generally passed in when a new control or object is being created by a user.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.ModelEditingScope">
      <summary>
                    Represents a group of changes to the editing store.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelEditingScope.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Model.ModelEditingScope" /> class. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelEditingScope.CanComplete">
      <summary>
                    Determines whether the <see cref="M:Microsoft.Windows.Design.Model.ModelEditingScope.OnComplete" /> method can be called, or whether the change should instead be reverted.
                </summary>
      <returns>true if completion can occur; false if the change should instead be reverted.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelEditingScope.Complete">
      <summary>
                    Completes the editing scope.
                </summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:Microsoft.Windows.Design.Model.ModelEditingScope" /> has already been completed or reverted.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelEditingScope.Description">
      <summary>
                    Gets or sets a description for the group.
                </summary>
      <returns>
                    A string containing the description for the group.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelEditingScope.Dispose">
      <summary>
                    Releases all resources used by the <see cref="T:Microsoft.Windows.Design.Model.ModelEditingScope" />. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelEditingScope.Dispose(System.Boolean)">
      <summary>
                    Releases the unmanaged resources used by the <see cref="T:Microsoft.Windows.Design.Model.ModelEditingScope" /> class and optionally releases the managed resources. 
                </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. 
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelEditingScope.Finalize">
      <summary>
                    Called during finalization to abort the group.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelEditingScope.OnComplete">
      <summary>
                    Performs the actual complete of the editing scope.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelEditingScope.OnRevert(System.Boolean)">
      <summary>
                    Performs the actual revert of the editing scope.
                </summary>
      <param name="finalizing">true if the abort occurs because the object is being finalized. Some undo systems may try to abort in this case, while others may abandon the change and record it as a reactive undo.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelEditingScope.Revert">
      <summary>
                    Abandons the changes that were made during the editing scope.
                </summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:Microsoft.Windows.Design.Model.ModelEditingScope" /> has already been committed.
                </exception>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.ModelEvent">
      <summary>
                    Represents an event on an item. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelEvent.#ctor">
      <summary>
                    When overridden in a derived class, initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Model.ModelEvent" /> class. 
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelEvent.Attributes">
      <summary>
                    When overridden in a derived class, gets the attributes declared on this event.
                </summary>
      <returns>
                    An <see cref="T:System.ComponentModel.AttributeCollection" /> that represents the attributes declared on this event.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelEvent.EventType">
      <summary>
                    When overridden in a derived class, gets the data type of the delegate for this event.
                </summary>
      <returns>
                    A <see cref="T:System.Type" /> that represents the data type of this event.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelEvent.Handlers">
      <summary>
                    When overridden in a derived class, gets a collection of method names that should handle this event. 
                </summary>
      <returns>
                    An <see cref="T:System.Collections.ICollection" /> that represents the names of methods that should handle this event.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelEvent.IsBrowsable">
      <summary>
                    When overridden in a derived class, gets whether the event can be shown in a property window.
                </summary>
      <returns>true if the event is shown in a property window; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelEvent.Name">
      <summary>
                    When overridden in a derived class, gets the name of this event.
                </summary>
      <returns>
                    A string representing the name of this event.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelEvent.Parent">
      <summary>
                    When overridden in a derived class, gets the parent of this event. 
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> representing the parent of this event.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.ModelEventCollection">
      <summary>
                    Represents an enumeration of events. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelEventCollection.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Model.ModelEventCollection" /> class. 
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.ModelFactory">
      <summary>
                    Used to create instances of model items in the designer. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelFactory.CreateItem(Microsoft.Windows.Design.EditingContext,System.Object)">
      <summary>
                    Creates a new model item by creating a deep copy of the specified object.
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> representing the newly created item.
                </returns>
      <param name="context">
                    An <see cref="T:Microsoft.Windows.Design.EditingContext" /> representing the designer's editing context
                </param>
      <param name="item">
                    An object representing the item to clone.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelFactory.CreateItem(Microsoft.Windows.Design.EditingContext,System.Type,Microsoft.Windows.Design.Model.CreateOptions,System.Object[])">
      <summary>
                    Creates a new model item for the specified item type.
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> representing the newly created item type.
                </returns>
      <param name="context">
                    An <see cref="T:Microsoft.Windows.Design.EditingContext" /> representing the designer's editing context.
                </param>
      <param name="itemType">
                    A <see cref="T:System.Type" /> representing the type of item to create.
                </param>
      <param name="options">
                    A set of create options to use when creating the item. The default value is <see cref="F:Microsoft.Windows.Design.Model.CreateOptions.None" />.
                </param>
      <param name="arguments">
                    An optional array of arguments that should be passed to the constructor of the item.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="itemType" /> or <paramref name="context" /> is null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    There is no editing model in the context that can create new items.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelFactory.CreateItem(Microsoft.Windows.Design.EditingContext,System.Type,System.Object[])">
      <summary>
                    Creates a new model item for the specified item type.
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> representing the newly created item type.
                </returns>
      <param name="context">
                    An <see cref="T:Microsoft.Windows.Design.EditingContext" /> representing the designer's editing context.
                </param>
      <param name="itemType">
                    A <see cref="T:System.Type" /> representing the type of item to create.
                </param>
      <param name="arguments">
                    An optional array of arguments that should be passed to the constructor of the item.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="itemType" /> or <paramref name="context" /> is null.
                </exception>
      <exception cref="T:System.InvalidOperationException">
                    There is no editing model in the context that can create new items.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelFactory.CreateStaticMemberItem(Microsoft.Windows.Design.EditingContext,System.Type,System.String)">
      <summary>
                    Creates a new model item that represents the value of a static member of the specified class. 
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> representing the value of the static member specified by <paramref name="memberName" /> on the type specified by <paramref name="type" />.
                </returns>
      <param name="context">
                    The designer's editing context.
                </param>
      <param name="type">
                    The type that contains the static member being referenced.
                </param>
      <param name="memberName">
                    The name of the static member being referenced.
                </param>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.ModelItem">
      <summary>
                    Represents a single item in the editing model.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItem.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> class. 
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItem.Attributes">
      <summary>
                    When overridden in a derived class, gets the attributes declared on this item.
                </summary>
      <returns>
                    An <see cref="T:System.ComponentModel.AttributeCollection" /> that contains the attributes declared on this item.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItem.BeginEdit">
      <summary>
                    When overridden in a derived class, this method is called when performing multiple operations on an object or group of objects. 
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelEditingScope" /> that must be either completed or reverted.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItem.BeginEdit(System.String)">
      <summary>
                    When overridden in a derived class, this method is called when performing multiple operations on an object or group of objects. 
                </summary>
      <returns>
                    An <see cref="T:Microsoft.Windows.Design.Model.ModelEditingScope" /> that must be either completed or reverted.
                </returns>
      <param name="description">
                    An optional description that describes the change. This string is set into the editing scope’s <see cref="P:Microsoft.Windows.Design.Model.ModelEditingScope.Description" /> property.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItem.Content">
      <summary>
                    When overridden in a derived class, gets a <see cref="T:Microsoft.Windows.Design.Model.ModelProperty" /> representing the item's <see cref="T:System.Windows.Markup.ContentPropertyAttribute" />.
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelProperty" /> representing the item's <see cref="T:System.Windows.Markup.ContentPropertyAttribute" />.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItem.Events">
      <summary>
                    When overridden in a derived class, gets the public events on this object.
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelEventCollection" /> that contains the events on this object.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItem.GetCurrentValue">
      <summary>
                    When overridden in a derived class, returns the current value of the underlying model object the <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> is wrapping. 
                </summary>
      <returns>
                    Returns an object that represents the current value of the underlying model object the <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> is wrapping.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItem.ItemType">
      <summary>
                    When overridden in a derived class, gets the type of object the item represents.
                </summary>
      <returns>
                    A <see cref="T:System.Type" /> object that represents the type of the underlying object.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItem.Name">
      <summary>
                    When overridden in a derived class, gets or sets the name or ID of the item. 
                </summary>
      <returns>
                    A string representing the name of the item.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItem.Parent">
      <summary>
                    When overridden in a derived class, gets the item that is the parent of this item. 
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> that represents the parent item of this object.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItem.Properties">
      <summary>
                    When overridden in a derived class, gets the public properties on this object. 
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelPropertyCollection" /> that contains the properties on this <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />.
                </returns>
    </member>
    <member name="E:Microsoft.Windows.Design.Model.ModelItem.PropertyChanged">
      <summary>
                    When overridden in a derived class, occurs when a property on the model changes.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItem.Root">
      <summary>
                    When overridden in a derived class, gets the item that is the root of this tree.
                </summary>
      <returns>
                    The item that is the root of this tree, or null there if there is no root yet.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItem.Source">
      <summary>
                    When overridden in a derived class, gets the property that provided this value. 
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelProperty" /> that represents the source of this <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItem.View">
      <summary>
                    When overridden in a derived class, gets the visual or visual3D representing the UI for this item. 
                </summary>
      <returns>
                    A <see cref="T:System.Windows.DependencyObject" /> representing the UI for this item.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.ModelItemCollection">
      <summary>
                    Implements support for a collection of <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> objects.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Model.ModelItemCollection" /> class. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.Add(Microsoft.Windows.Design.Model.ModelItem)">
      <summary>
                    When overridden in a derived class, adds the specified item to the collection.
                </summary>
      <param name="item">
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> to be added to the collection.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.Add(System.Object)">
      <summary>
                    When overridden in a derived class, adds the specified object to the collection. 
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> representing the value.
                </returns>
      <param name="value">
                    An object to be added to the collection.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.Clear">
      <summary>
                    When overridden in a derived class, clears the contents of the collection.
                </summary>
    </member>
    <member name="E:Microsoft.Windows.Design.Model.ModelItemCollection.CollectionChanged">
      <summary>
                    When overridden in a derived class, occurs when the contents of this collection is changed.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.Contains(Microsoft.Windows.Design.Model.ModelItem)">
      <summary>
                    When overridden in a derived class, returns a value indicating whether the collection contains the specified item.
                </summary>
      <returns>true if the <paramref name="item" /> is contained in the collection; otherwise, false.
                </returns>
      <param name="item">
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> to be tested.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.Contains(System.Object)">
      <summary>
                    When overridden in a derived class, returns a value indicating whether the collection contains the specified value.
                </summary>
      <returns>true if the <paramref name="item" /> is contained in the collection; otherwise, false.
                </returns>
      <param name="value">
                    An object to be tested.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.CopyTo(Microsoft.Windows.Design.Model.ModelItem[],System.Int32)">
      <summary>
                    When overridden in a derived class, copies the contents of the collection into the specified array.
                </summary>
      <param name="array">
                    The array for the current <see cref="T:Microsoft.Windows.Design.Model.ModelItemCollection" /> to be copied to.
                </param>
      <param name="arrayIndex">
                    The location in the destination array to copy the items from the collection to.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemCollection.Count">
      <summary>
                    When overridden in a derived class, gets the count of items in the collection.
                </summary>
      <returns>
                    An integer that represents the number of items in the collection.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.GetEnumerator">
      <summary>
                    When overridden in a derived class, returns an enumerator for the items in the collection.
                </summary>
      <returns>
                    An <see cref="T:System.Collections.IEnumerator" /> that can act as an enumerator for the items in this dictionary.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.IndexOf(Microsoft.Windows.Design.Model.ModelItem)">
      <summary>
                    When overridden in a derived class, returns the index of the specified item.
                </summary>
      <returns>
                    Returns an integer representing the index of the specified <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />. If the item is not found it returns -1.
                </returns>
      <param name="item">
                    The <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> to find the index of.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.Insert(System.Int32,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>
                    When overridden in a derived class, inserts an item at the specified location. 
                </summary>
      <param name="index">
                    The index for the item to be inserted.
                </param>
      <param name="item">
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> to be inserted at the specified index.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.Insert(System.Int32,System.Object)">
      <summary>
                    When overridden in a derived class, inserts an item at the specified location. 
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> representing the value.
                </returns>
      <param name="index">
                    The index for the item to be inserted.
                </param>
      <param name="value">
                    A object to be inserted at the specified index.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemCollection.IsFixedSize">
      <summary>
                    When overridden in a derived class, gets a value indicating whether the collection is a fixed size. 
                </summary>
      <returns>true if the collection is a fixed size; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemCollection.IsReadOnly">
      <summary>
                    When overridden in a derived class, gets a value indicating whether the collection can be modified.
                </summary>
      <returns>true if the collection is read-only; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemCollection.IsSynchronized">
      <summary>
                    When overridden in a derived class, gets a value indicating whether the collection is synchronized.
                </summary>
      <returns>true if the collection is synchronized; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemCollection.Item(System.Int32)">
      <summary>
                    When overridden in a derived class, gets or sets the item at the specified index. This is a dependency property.
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> representing the item at the specified index.
                </returns>
      <param name="index">
                    The index to be set or retrieved.
                </param>
    </member>
    <member name="F:Microsoft.Windows.Design.Model.ModelItemCollection.ItemProperty">
      <summary>
                    Identifies the <see cref="P:Microsoft.Windows.Design.Model.ModelItemCollection.Item(System.Int32)" /> dependency property. 
                </summary>
      <returns>
                    The identifier for the <see cref="P:Microsoft.Windows.Design.Model.ModelItemCollection.Item(System.Int32)" /> dependency property.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.Move(System.Int32,System.Int32)">
      <summary>
                    When overridden in a derived class, moves an item to a new index. 
                </summary>
      <param name="fromIndex">
                    The index of the item to move.
                </param>
      <param name="toIndex">
                    The index to move it to.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.Remove(Microsoft.Windows.Design.Model.ModelItem)">
      <summary>
                    When overridden in a derived class, removes an item from the collection. 
                </summary>
      <returns>true if the item is successfully removed; otherwise, false.
                </returns>
      <param name="item">
                    The item to be removed.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.Remove(System.Object)">
      <summary>
                    When overridden in a derived class, removes a value from the collection. 
                </summary>
      <returns>true if the item is successfully removed; otherwise, false.
                </returns>
      <param name="value">
                    The item to be removed from the collection.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.RemoveAt(System.Int32)">
      <summary>
                    When overridden in a derived class, removes an item at the specified index.
                </summary>
      <param name="index">
                    The index at which to remove the item.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemCollection.SyncRoot">
      <summary>
                    When overridden in a derived class, gets an object that can be used to synchronize this collection. 
                </summary>
      <returns>
                    An object that can be used to synchronize the collection.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>
                    For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.
                </summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#ICollection#Count">
      <summary>
                    For a description of this member, see <see cref="P:System.Collections.ICollection.Count" />.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#ICollection#IsSynchronized">
      <summary>
                    For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#ICollection#SyncRoot">
      <summary>
                    For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
                    For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#IList#Add(System.Object)">
      <summary>
                    For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.
                </summary>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#IList#Clear">
      <summary>
                    For a description of this member, see <see cref="M:System.Collections.IList.Clear" />.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#IList#Contains(System.Object)">
      <summary>
                    For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.
                </summary>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>
                    For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.
                </summary>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>
                    For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.
                </summary>
      <param name="index"></param>
      <param name="value"></param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#IList#IsFixedSize">
      <summary>
                    For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#IList#IsReadOnly">
      <summary>
                    For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#IList#Item(System.Int32)">
      <summary>
                    For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.
                </summary>
      <param name="index"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#IList#Remove(System.Object)">
      <summary>
                    For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.
                </summary>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>
                    For a description of this member, see <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.
                </summary>
      <param name="index"></param>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.ModelItemDictionary">
      <summary>
                    Implements key/value dictionary support for <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> objects.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Model.ModelItemDictionary" /> class. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.Add(Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem)">
      <summary>
                    When overridden in a derived class, adds the item to the dictionary under the specified key.
                </summary>
      <param name="key">
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> that is the key for this dictionary entry.
                </param>
      <param name="value">
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> that is the value for this dictionary entry.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.Add(System.Object,System.Object)">
      <summary>
                    When overridden in a derived class, adds the value to the dictionary under the specified key. 
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> representing the key in the dictionary.
                </returns>
      <param name="key">
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> that is the key for this dictionary entry.
                </param>
      <param name="value">
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> that is the value for this dictionary entry.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.Clear">
      <summary>
                    When overridden in a derived class, clears the contents of the dictionary.
                </summary>
    </member>
    <member name="E:Microsoft.Windows.Design.Model.ModelItemDictionary.CollectionChanged">
      <summary>
                    When overridden in a derived class, occurs when the contents of this dictionary is changed.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.Contains(System.Collections.Generic.KeyValuePair{Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem})">
      <summary>
                    When overridden in a derived class, returns whether the dictionary contains the specified key value pair.
                </summary>
      <returns>true if the dictionary contains the <paramref name="item" />; otherwise, false.
                </returns>
      <param name="item">
                    The item to be tested for inclusion in the dictionary.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.ContainsKey(Microsoft.Windows.Design.Model.ModelItem)">
      <summary>
                    When overridden in a derived class, returns a value indicating whether the dictionary contains the specified key.
                </summary>
      <returns>true if the dictionary contains the <paramref name="key" />; otherwise, false.
                </returns>
      <param name="key">
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> that represents the key to be tested.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.ContainsKey(System.Object)">
      <summary>
                    When overridden in a derived class, returns a value indicating whether the dictionary contains the specified key.
                </summary>
      <returns>true if the dictionary contains the <paramref name="key" />; otherwise, false.
                </returns>
      <param name="key">
                    A object that represents the key to be tested.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.CopyTo(System.Collections.Generic.KeyValuePair{Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem}[],System.Int32)">
      <summary>
                    When overridden in a derived class, copies the contents of the dictionary into the specified array beginning at the specified index.
                </summary>
      <param name="array">
                    The array for the current <see cref="T:Microsoft.Windows.Design.Model.ModelItemDictionary" /> to be copied to.
                </param>
      <param name="arrayIndex">
                    The location within the destination array to copy the items from the dictionary to.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.Count">
      <summary>
                    When overridden in a derived class, gets the count of items in the dictionary.
                </summary>
      <returns>
                    An integer that represents the number of items in the dictionary.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.GetEnumerator">
      <summary>
                    When overridden in a derived class, returns an enumerator for the items in the dictionary.
                </summary>
      <returns>
                    An <see cref="T:System.Collections.IEnumerator" /> that can act as an enumerator for the items in this dictionary.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.IsFixedSize">
      <summary>
                    When overridden in a derived class, gets a value indicating whether the dictionary is a fixed size. 
                </summary>
      <returns>true if the dictionary is a fixed size; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.IsReadOnly">
      <summary>
                    When overridden in a derived class, gets a value indicating whether the dictionary can be modified.
                </summary>
      <returns>true if the dictionary is read-only; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.IsSynchronized">
      <summary>
                    When overridden in a derived class, gets a value indicating whether the dictionary is synchronized.
                </summary>
      <returns>true if the dictionary is synchronized; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.Item(Microsoft.Windows.Design.Model.ModelItem)">
      <summary>
                    When overridden in a derived class, gets or sets the item at the specified key. 
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> representing the item at the specified key.
                </returns>
      <param name="key">
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> that represents the key to an item in the <see cref="T:Microsoft.Windows.Design.Model.ModelItemDictionary" />.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.Item(System.Object)">
      <summary>
                    When overridden in a derived class, gets or sets the item at the specified key. 
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> representing the item at the specified key.
                </returns>
      <param name="key">
                    An object that represents the key to an item in the <see cref="T:Microsoft.Windows.Design.Model.ModelItemDictionary" />.
                </param>
    </member>
    <member name="F:Microsoft.Windows.Design.Model.ModelItemDictionary.KeyProperty">
      <summary>
                    ModelItemDictionary provides an attached property “Key”, which is adds to all items contained in the dictionary. The data type of the Key property is “ModelItem”.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.Keys">
      <summary>
                    When overridden in a derived class, gets the keys of the dictionary. 
                </summary>
      <returns>
                    An <see cref="T:System.Collections.ICollection" /> that contains the keys of the <see cref="T:Microsoft.Windows.Design.Model.ModelItemDictionary" />. 
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.Remove(Microsoft.Windows.Design.Model.ModelItem)">
      <summary>
                    When overridden in a derived class, removes the item from the dictionary. 
                </summary>
      <returns>true if the item is successfully removed; otherwise, false.
                </returns>
      <param name="key">
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> representing the key of the item to be removed.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.Remove(System.Object)">
      <summary>
                    When overridden in a derived class, removes the item from the dictionary. 
                </summary>
      <returns>true if the item is successfully removed; otherwise, false.
                </returns>
      <param name="key">
                    An object representing the key of the item to be removed.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.SyncRoot">
      <summary>
                    When overridden in a derived class, gets the object used to synchronize this dictionary. 
                </summary>
      <returns>
                    An object that can be used to synchronize the dictionary.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem})"></member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem})"></member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem}[],System.Int32)"></member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem})"></member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>
                    For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.
                </summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#ICollection#Count">
      <summary>
                    For a description of this member, see <see cref="P:System.Collections.ICollection.Count" />.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#ICollection#IsSynchronized">
      <summary>
                    For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#ICollection#SyncRoot">
      <summary>
                    For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>
                    For a description of this member, see <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />.
                </summary>
      <param name="key"></param>
      <param name="value"></param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#IDictionary#Clear">
      <summary>
                    For a description of this member, see <see cref="M:System.Collections.IDictionary.Clear" />.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#IDictionary#Contains(System.Object)">
      <summary>
                    For a description of this member, see <see cref="M:System.Collections.IDictionary.Contains(System.Object)" />.
                </summary>
      <returns>true if the dictionary contains an element with <paramref name="key" />; otherwise, false. 
                </returns>
      <param name="key">
                    The key to locate in the dictionary.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#IDictionary#GetEnumerator">
      <summary>
                    For a description of this member, see <see cref="M:System.Collections.IDictionary.GetEnumerator" />.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#IDictionary#IsFixedSize">
      <summary>
                    For a description of this member, see <see cref="P:System.Collections.IDictionary.IsFixedSize" />.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#IDictionary#IsReadOnly">
      <summary>
                    For a description of this member, see <see cref="P:System.Collections.IDictionary.IsReadOnly" />.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#IDictionary#Item(System.Object)">
      <summary>
                    For a description of this member, see <see cref="P:System.Collections.IDictionary.Item(System.Object)" />.
                </summary>
      <param name="key"></param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#IDictionary#Keys">
      <summary>
                    For a description of this member, see <see cref="P:System.Collections.IDictionary.Keys" />.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#IDictionary#Remove(System.Object)">
      <summary>
                    For a description of this member, see <see cref="M:System.Collections.IDictionary.Remove(System.Object)" />.
                </summary>
      <param name="key"></param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#IDictionary#Values">
      <summary>
                    For a description of this member, see <see cref="P:System.Collections.IDictionary.Values" />.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>
                    For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.TryGetValue(Microsoft.Windows.Design.Model.ModelItem,Microsoft.Windows.Design.Model.ModelItem@)">
      <summary>
                    When overridden in a derived class, retrieves the value for the specified key.
                </summary>
      <returns>true if a value associated with <paramref name="key" /> is found; otherwise, false.
                </returns>
      <param name="key">
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> representing the key to be tested.
                </param>
      <param name="value">
                    If a value is found for the <paramref name="key" />, this out parameter contains the <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> value that is retrieved.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelItemDictionary.TryGetValue(System.Object,Microsoft.Windows.Design.Model.ModelItem@)">
      <summary>
                    When overridden in a derived class, retrieves the value for the specified key.
                </summary>
      <returns>true if a value associated with <paramref name="key" /> is found; otherwise, false.
                </returns>
      <param name="key">
                    An object representing the key to be tested.
                </param>
      <param name="value">
                    If a value is found for the <paramref name="key" />, this out parameter contains the <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> value that is retrieved.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelItemDictionary.Values">
      <summary>
                    When overridden in a derived class, gets the values of the dictionary. 
                </summary>
      <returns>
                    An <see cref="T:System.Collections.ICollection" /> that contains the items of the <see cref="T:Microsoft.Windows.Design.Model.ModelItemDictionary" />. 
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.ModelMemberCollection`2">
      <summary>
                    Represents a collection for model members.
                </summary>
      <typeparam name="TItemType">
                    The type of item the collection represents.
                </typeparam>
      <typeparam name="TFindType">
                    The type that should be used as a key in Find methods.
                </typeparam>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelMemberCollection`2.Find(System.String)">
      <summary>
                    Searches the collection for an item with the specified key and returns it if it is found. 
                </summary>
      <returns>
                    A TItemType with the specified key. If not found, this method returns null.
                </returns>
      <param name="name">
                    The key of the item to find.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelMemberCollection`2.Find(System.String,System.Boolean)">
      <summary>
                    When overridden in a derived class, searches the collection for an item with the specified key and returns it if it is found. 
                </summary>
      <returns>
                    A TItemType with the specified key. If not found, this method throws an exception or returns null, depending on the value passed to <paramref name="throwOnError" />.
                </returns>
      <param name="name">
                    The key of the item to find.
                </param>
      <param name="throwOnError">true if an exception should be thrown if the item is not found; otherwise, false.
                </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is not found and <paramref name="throwOnError" /> is true.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelMemberCollection`2.Find(`1)">
      <summary>
                    Searches the collection for an item with the specified key and returns it if it is found. 
                </summary>
      <returns>
                    A TItemType with the specified key. If not found, this method returns null.
                </returns>
      <param name="value">
                    The key of the item to find.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelMemberCollection`2.Find(`1,System.Boolean)">
      <summary>
                    When overridden in a derived class, searches the collection for an item with the specified key and returns it if it is found. 
                </summary>
      <returns>
                    A TItemType with the specified key. If not found, this method throws an exception or returns null, depending on the value passed to <paramref name="throwOnError" />.
                </returns>
      <param name="value">
                    The key of the item to find.
                </param>
      <param name="throwOnError">true if an exception should be thrown if the item is not found; otherwise, false.
                </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not found and <paramref name="throwOnError" /> is true.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelMemberCollection`2.GetEnumerator">
      <summary>
                    When overridden in a derived class, returns an enumerator to enumerate items.
                </summary>
      <returns>
                    An <see cref="T:System.Collections.IEnumerator" /> to enumerate items.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelMemberCollection`2.Item(System.String)">
      <summary>
                    Searches the collection for an item with the specified key and returns it if it is found.
                </summary>
      <returns>
                    A TItemType with the specified key. If not found, this property throws an exception.
                </returns>
      <param name="name">
                    The key of the item to find.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is not found.
                </exception>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelMemberCollection`2.Item(`1)">
      <summary>
                    Searches the collection for an item with the specified key and returns it if it is found. 
                </summary>
      <returns>
                    A TItemType with the specified key. If not found, this property throws an exception.
                </returns>
      <param name="value">
                    The key of the item to find.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not found.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelMemberCollection`2.System#Collections#IEnumerable#GetEnumerator">
      <summary>
                    For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.ModelProperty">
      <summary>
                    Represents a property on an item.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelProperty.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Model.ModelProperty" /> class. 
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.AttachedOwnerType">
      <summary>
                    When overridden in a derived class, gets the type which defines this property.
                </summary>
      <returns>
                    A <see cref="T:System.Type" /> which defines this property if the <see cref="P:Microsoft.Windows.Design.Model.ModelProperty.IsAttached" /> property returns true. Otherwise, returns null.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.Attributes">
      <summary>
                    When overridden in a derived class, gets the attributes declared on this property.
                </summary>
      <returns>
                    Returns an <see cref="T:System.ComponentModel.AttributeCollection" /> instance that contains the attributes declared on this property.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelProperty.ClearValue">
      <summary>
                    When overridden in a derived class, clears the local value for the property.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.Collection">
      <summary>
                    When overridden in a derived class, gets the <see cref="P:Microsoft.Windows.Design.Model.ModelProperty.Value" /> property cast as a <see cref="T:Microsoft.Windows.Design.Model.ModelItemCollection" />. 
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItemCollection" /> that represents <see cref="P:Microsoft.Windows.Design.Model.ModelProperty.Value" />.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.ComputedValue">
      <summary>
                    When overridden in a derived class, gets the currently computed value for this property.
                </summary>
      <returns>
                    An object representing the computed value for this property.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.Converter">
      <summary>
                    When overridden in a derived class, gets the type converter to use with this property. 
                </summary>
      <returns>
                    A <see cref="T:System.ComponentModel.TypeConverter" /> instance that can be used with the property.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.DefaultValue">
      <summary>
                    When overridden in a derived class, gets the default value for this property. 
                </summary>
      <returns>
                    An object representing the default value for this property. If the property does not define a default value, this property returns null.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.Dictionary">
      <summary>
                    When overridden in a derived class, gets the <see cref="P:Microsoft.Windows.Design.Model.ModelProperty.Value" /> property cast as a <see cref="T:Microsoft.Windows.Design.Model.ModelItemDictionary" />. 
                </summary>
      <returns>
        <see cref="P:Microsoft.Windows.Design.Model.ModelProperty.Value" /> cast as an <see cref="T:Microsoft.Windows.Design.Model.ModelItemDictionary" />. 
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelProperty.Equals(System.Object)">
      <summary>
                    Determines whether the specified object is equal to this <see cref="T:Microsoft.Windows.Design.Model.ModelProperty" /> object.
                </summary>
      <returns>true if the properties are equal; otherwise, false.
                </returns>
      <param name="obj">
                    An object to be tested for equality.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelProperty.GetHashCode"></member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.IsAttached">
      <summary>
                    When overridden in a derived class, gets a value indicating whether the property represents an attached property from a different type.
                </summary>
      <returns>true if the property represents an attached property from a different type; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.IsBrowsable">
      <summary>
                    When overridden in a derived class, gets a value indicating whether the property can be shown in a property window.
                </summary>
      <returns>true if the property can be shown in a property window; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.IsCollection">
      <summary>
                    When overridden in a derived class, gets a value indicating whether the value contained in the property is an ItemCollection.
                </summary>
      <returns>true if the property value is an ItemCollection; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.IsDictionary">
      <summary>
                    When overridden in a derived class, gets a value indicating whether the value contained in the property is an ItemDictionary.
                </summary>
      <returns>true if the property value is an ItemDictionary; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.IsReadOnly">
      <summary>
                    When overridden in a derived class, gets a value indicating whether the property is read-only.
                </summary>
      <returns>true if the property is read only; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.IsSet">
      <summary>
                    When overridden in a derived class, gets a value indicating whether the property's value is set locally.
                </summary>
      <returns>true if the property’s value is set locally; otherwise, false.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.Name">
      <summary>
                    When overridden in a derived class, gets the name of this property.
                </summary>
      <returns>
                    A string representing the name of this property.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelProperty.op_Equality(Microsoft.Windows.Design.Model.ModelProperty,Microsoft.Windows.Design.Model.ModelProperty)">
      <summary>
                    Determines whether two specified <see cref="T:Microsoft.Windows.Design.Model.ModelProperty" /> objects are equal.
                </summary>
      <returns>true if the properties are equal; otherwise, false.
                </returns>
      <param name="first">
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelProperty" /> to compare.
                </param>
      <param name="second">
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelProperty" /> to compare.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelProperty.op_Inequality(Microsoft.Windows.Design.Model.ModelProperty,Microsoft.Windows.Design.Model.ModelProperty)">
      <summary>
                    Determines whether two specified <see cref="T:Microsoft.Windows.Design.Model.ModelProperty" /> objects are not equal.
                </summary>
      <returns>true if the properties are not equal; otherwise, false.
                </returns>
      <param name="first">
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelProperty" /> to compare.
                </param>
      <param name="second">
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelProperty" /> to compare.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.Parent">
      <summary>
                    When overridden in a derived class, gets the parent of this property. 
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> instance representing the parent of this property.
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.PropertyType">
      <summary>
                    When overridden in a derived class, gets the data type of the property.
                </summary>
      <returns>
                    A <see cref="T:System.Type" /> representing the type of this property.
                </returns>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelProperty.SetValue(System.Object)">
      <summary>
                    When overridden in a derived class, sets a local value on a property. 
                </summary>
      <returns>
                    If the value is already a <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />, the input value is returned. If the value is not a <see cref="T:Microsoft.Windows.Design.Model.ModelItem" />, a newly created <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> wrapping the value is returned.
                </returns>
      <param name="value">
                    An object representing the value to be set.
                </param>
    </member>
    <member name="P:Microsoft.Windows.Design.Model.ModelProperty.Value">
      <summary>
                    When overridden in a derived class, gets the value of this property. 
                </summary>
      <returns>
                    A <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> instance representing the value of this property.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Model.ModelPropertyCollection">
      <summary>
                    Represents a collection of properties. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Model.ModelPropertyCollection.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Model.ModelPropertyCollection" /> class. 
                </summary>
    </member>
    <member name="T:Microsoft.Windows.Design.Services.ModelChangedEventArgs">
      <summary>
                    Provides data for the <see cref="E:Microsoft.Windows.Design.Services.ModelService.ModelChanged" /> event.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ModelChangedEventArgs.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Services.ModelChangedEventArgs" /> class.
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Services.ModelChangedEventArgs.ItemsAdded">
      <summary>
                    Gets an enumeration of objects that have been added to the editing model.
                </summary>
      <returns>
                    An enumeration of <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> objects that have been added to the editing model. 
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Services.ModelChangedEventArgs.ItemsRemoved">
      <summary>
                    Gets an enumeration of objects that have been removed from the editing model.
                </summary>
      <returns>
                    An enumeration of <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> objects that have been removed from the editing model. 
                </returns>
    </member>
    <member name="P:Microsoft.Windows.Design.Services.ModelChangedEventArgs.PropertiesChanged">
      <summary>
                    Gets an enumeration of properties that have been changed in the editing model.
                </summary>
      <returns>
                    An enumeration of <see cref="T:Microsoft.Windows.Design.Model.ModelProperty" /> objects that represent changed properties in the editing model. 
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Services.ModelService">
      <summary>
                    Provides the main entry point that the designer uses to obtain the editing model. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ModelService.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Services.ModelService" /> class.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ModelService.CreateItem(System.Object)">
      <summary>
                    When overridden in a derived class, creates a model item that is a deep copy of the specified instance.
                </summary>
      <returns>
                    A new model item that is a clone of the existing item.
                </returns>
      <param name="item">
                    The item to wrap.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ModelService.CreateItem(System.Type,Microsoft.Windows.Design.Model.CreateOptions,System.Object[])">
      <summary>
                    When overridden in a derived class, creates a <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> object for a specified type. 
                </summary>
      <returns>
                    A newly created model item.
                </returns>
      <param name="itemType">
                    The type of item to create.
                </param>
      <param name="options">
                    Creation options. You can specify if you want to initialize default values for an item.
                </param>
      <param name="arguments">
                    An array of arguments to pass to the constructor of the item.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="itemType" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ModelService.CreateStaticMemberItem(System.Type,System.String)">
      <summary>
                    When overridden in a derived class, creates a new model item that represents the value of a static member of the specified class.
                </summary>
      <returns>
                    A newly created model item that represents a static member of <paramref name="type" />. 
                </returns>
      <param name="type">
                    The type that contains the static member being referenced.
                </param>
      <param name="memberName">
                    The name of the static member being referenced.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ModelService.Find(Microsoft.Windows.Design.Model.ModelItem,System.Predicate{System.Type})">
      <summary>
                    When overridden in a derived class, finds matching model items for a specified starting point. 
                </summary>
      <returns>
                    An enumeration of model items matching the query.
                </returns>
      <param name="startingItem">
                    The model item to start the search. Items above this item are ignored. This item, and any item below it in the hierarchy, are included in the search. If this parameter is null, the root is used.
                </param>
      <param name="match">
                    A predicate that allows more complex type matching to be used. For example, the predicate could return true for both the <see cref="T:System.Windows.FrameworkElement" /> and <see cref="T:System.Windows.FrameworkContentElement" /> types.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ModelService.Find(Microsoft.Windows.Design.Model.ModelItem,System.Type)">
      <summary>
                    When overridden in a derived class, finds matching model items for a specified starting point.
                </summary>
      <returns>
                    An enumeration of model items matching the query.
                </returns>
      <param name="startingItem">
                    The model item to start the search. Items above this item will be ignored. This item, and any item below it in the hierarchy, are included in the search. If this parameter is null, the root is used.
                </param>
      <param name="type">
                    The type of the object to find. 
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ModelService.FromName(Microsoft.Windows.Design.Model.ModelItem,System.String)">
      <summary>
                    Finds the model item in the specified scope with the specified name.
                </summary>
      <returns>
                    A model item whose name matches <paramref name="name" />, or null if no match was found.
                </returns>
      <param name="scope">
                    An optional scope to search.
                </param>
      <param name="name">
                    The name of the item to locate.
                </param>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ModelService.FromName(Microsoft.Windows.Design.Model.ModelItem,System.String,System.StringComparison)">
      <summary>
                    When overridden in a derived class, finds the model item in the specified scope with the specified name and comparison criteria.
                </summary>
      <returns>
                    A model item whose name matches <paramref name="name" />, or null if no match was found.
                </returns>
      <param name="scope">
                    An optional scope to search.
                </param>
      <param name="name">
                    The name of the item to locate.
                </param>
      <param name="comparison">
                    Specifies how the name is compared. The default is to compare with the <see cref="P:System.StringComparer.Ordinal" /> property.
                </param>
    </member>
    <member name="E:Microsoft.Windows.Design.Services.ModelService.ModelChanged">
      <summary>
                    When overridden in a derived class, occurs when an item in the model has changed. 
                </summary>
    </member>
    <member name="P:Microsoft.Windows.Design.Services.ModelService.Root">
      <summary>
                    When overridden in a derived class, gets the root of the object hierarchy. 
                </summary>
      <returns>
                    The <see cref="T:Microsoft.Windows.Design.Model.ModelItem" /> which represents the root of the editing model tree.
                </returns>
    </member>
    <member name="T:Microsoft.Windows.Design.Services.ViewService">
      <summary>
                    Associates visuals and editing model items.
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ViewService.#ctor">
      <summary>
                    Initializes a new instance of the <see cref="T:Microsoft.Windows.Design.Services.ViewService" /> class. 
                </summary>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ViewService.GetModel(System.Windows.DependencyObject)">
      <summary>
                    Returns the model corresponding to the view.
                </summary>
      <returns>
                    The corresponding model, or null if there is no model for the specified view object.
                </returns>
      <param name="view">
                    The view object you wish to find the model for.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="view" /> is null.
                </exception>
    </member>
    <member name="M:Microsoft.Windows.Design.Services.ViewService.GetView(Microsoft.Windows.Design.Model.ModelItem)">
      <summary>
                    Returns the view corresponding to the specified model.
                </summary>
      <returns>
                    The view for this model, or null if there is no view.
                </returns>
      <param name="model">
                    The model to return the view object for.
                </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="model" /> is null.
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="model" /> does not represent a valid model for this service.
                </exception>
    </member>
  </members>
</doc>